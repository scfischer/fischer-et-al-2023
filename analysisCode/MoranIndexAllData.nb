(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    208263,       3972]
NotebookOptionsPosition[    202426,       3870]
NotebookOutlinePosition[    202830,       3886]
CellTagsIndexPosition[    202787,       3883]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Moran indices for experimental data", "Title",
 CellChangeTimes->{{3.8913164950528493`*^9, 3.89131651005329*^9}, {
  3.891316564591364*^9, 
  3.891316570281006*^9}},ExpressionUUID->"03d4c82b-5a52-49e0-be8f-\
ee967b1f3de9"],

Cell["\<\
Supplementary material for Fischer et al \"The salt-and-pepper pattern in \
mouse blastocysts is compatible with signalling beyond the nearest \
neighbours.\"\
\>", "Subtitle",
 CellChangeTimes->{{3.8913164476057167`*^9, 
  3.891316491081924*^9}},ExpressionUUID->"d27da8c6-3813-4578-b090-\
12e8d3058d87"],

Cell[CellGroupData[{

Cell["Initialisation", "Section",
 CellChangeTimes->{{3.891316557660305*^9, 
  3.8913165595711527`*^9}},ExpressionUUID->"a8912e85-eaae-40f2-a5d1-\
df633ef15ec4"],

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<CellNucleiSegmentation_v8.m\>\""}], "}"}], "]"}], ")"}], " ", 
  RowBox[{"(*", 
   RowBox[{"code", " ", "from", " ", "Schmitz", " ", "et", " ", 
    RowBox[{"al", ".", " ", "Scientific"}], " ", "Reports", " ", "2017"}], 
   "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6870851642740846`*^9, 3.6870851727586613`*^9}, {
   3.777720724917198*^9, 3.7777207934472322`*^9}, {3.77772083219656*^9, 
   3.7777208385426292`*^9}, {3.780985092856868*^9, 3.7809851045145965`*^9}, {
   3.780986142452116*^9, 3.780986153746088*^9}, 3.826094422290558*^9, {
   3.8913212089652376`*^9, 3.891321224230796*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"607528b3-9193-4c33-843c-30943ed03b53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"baseFolder", ",", "\"\<neighbourAnaFunctions_v2.m\>\""}], "}"}],
     "]"}], ")"}], 
  RowBox[{"(*", 
   RowBox[{"code", " ", "from", " ", "Fischer", " ", "et", " ", 
    RowBox[{"al", ".", " ", "PLOS"}], " ", "One", " ", "2020", " ", "and", 
    " ", "extensions"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6676497553332834`*^9, 3.667649771011284*^9}, {
   3.687085176321243*^9, 3.6870851786806917`*^9}, {3.7777215504225874`*^9, 
   3.777721555362002*^9}, {3.7809851081700068`*^9, 3.7809851107003765`*^9}, {
   3.82609317514223*^9, 3.8260932001160927`*^9}, 3.8260944240832205`*^9, {
   3.8370807292858677`*^9, 3.837080730136922*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f286d0e4-030e-40e2-b59e-aacdd87f6577"],

Cell[BoxData[
 TemplateBox[{
  "Get", "stream", 
   "\"\\!\\(\\*RowBox[{\\\"FileNameJoin\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"baseFolder\\\", \\\",\\\", \\\"\\\\\\\"neighbourAnaFunctions_v2.m\
\\\\\\\"\\\"}], \\\"}\\\"}], \\\"]\\\"}]\\) is not a string, SocketObject, \
InputStream[ ], or OutputStream[ ].\"", 2, 25, 2, 16977146145782658960, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.891321291295164*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"2b607c0c-47b0-433f-8962-7376b2e6ef16"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.891321291317068*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"db7e2692-f691-472a-a179-045a302199bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fontOption", "=", "\"\<Arial\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8454369472140274`*^9, 3.845436964944708*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"97da38ab-0773-459a-b90e-f4acc395b581"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colour3", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Darker", "[", "Gray", "]"}], "}"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ColorData", "[", "16", "]"}], "/@", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "4"}], "}"}]}], ")"}]}], "]"}], "[", 
   RowBox[{"[", "i", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6926159731198854`*^9, 3.6926159732136354`*^9}, {
  3.692616018525936*^9, 3.692616018916541*^9}, {3.692616057182088*^9, 
  3.692616082275705*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"f75e4d6d-8390-4067-85e4-946f49bba053"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotMeanStdLighter", "[", 
   RowBox[{
   "xValues_", ",", "yValues_", ",", "smooth_", ",", "xLabel_", ",", 
    "yLabel_", ",", "colour_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"xValues", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"MeanFilter", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
                 "smooth"}], "]"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"xValues", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"MeanFilter", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
                 "smooth"}], "]"}]}], "}"}], "]"}]}], "}"}], "&"}], "@", 
         RowBox[{"yValues", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "All"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
             RowBox[{"Lighter", "[", 
              RowBox[{
               RowBox[{"colour", "[", "i", "]"}], ",", "0.7"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
             RowBox[{"Lighter", "[", 
              RowBox[{
               RowBox[{"colour", "[", "i", "]"}], ",", "0.7"}], "]"}]}], 
            "]"}]}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"1", "\[Rule]", 
          RowBox[{"{", "2", "}"}]}]}], ",", 
        RowBox[{"FillingStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"colour", "[", "i", "]"}], ",", "0.5"}], "]"}]}], 
          "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "True", ",", "None", ",", "None"}], "}"}]}], 
        ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"(*", 
            RowBox[{"Thick", ","}], "*)"}], 
           RowBox[{"FontFamily", "\[Rule]", "fontOption"}], ",", "14"}], 
          "]"}]}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"TicksStyle", "\[Rule]", "Thick"}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"xLabel", ",", "yLabel"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "xValues", "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xValues", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"MeanFilter", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "smooth"}], 
              "]"}]}], "}"}], "]"}], "&"}], "@", 
         RowBox[{"yValues", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "xValues", "]"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "All"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.007", "]"}], ",", 
            RowBox[{"Length", "[", "xValues", "]"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"colour", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "xValues", "]"}]}], "}"}]}], "]"}]}], 
         "}"}], "]"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "None", ",", "None"}], "}"}]}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontFamily", "\[Rule]", "fontOption"}], ",", "14"}], 
        "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"xLabel", ",", "yLabel"}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6926170221468544`*^9, 3.692617051381136*^9}, {
  3.781339089141657*^9, 3.781339097841724*^9}, {3.7813414844104314`*^9, 
  3.7813414845504513`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"660d6228-05c2-45ca-b9dc-e9ccff87fe03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"populationsColours", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Lighter", "[", 
      RowBox[{"Orange", ",", "0.7"}], "]"}], ",", "Gray", ",", 
     RowBox[{"Darker", "[", "Purple", "]"}], ",", 
     RowBox[{"Darker", "[", 
      RowBox[{"Green", ",", "0.7"}], "]"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.848636239311721*^9, 3.84863624582591*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"afbaf769-e8e2-4a9b-bfd5-a053387f493a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Moran index of data", "Section",
 CellChangeTimes->{{3.8362956606901927`*^9, 3.836295668441126*^9}, {
  3.836297059989249*^9, 3.836297060933772*^9}, {3.8369648230702295`*^9, 
  3.8369648240226746`*^9}},ExpressionUUID->"9f3a931d-8ddb-456b-95d2-\
875467e9c546"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allFolders", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<SMD_2020_NG6\>\"", ",", "\"\<SMD_2021_NG6G4\>\"", ",", 
     "\"\<JLG_2021_NG6\>\"", ",", "\"\<NS_2016_NG6\>\"", ",", 
     "\"\<NS_2020_NG6\>\"", ",", "\"\<NS_2020_NRatG6Rb\>\"", ",", 
     "\"\<NS_2020_NRatG6Gt\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875244771920579*^9, 3.87524487770393*^9}, {
  3.8752461432455406`*^9, 3.875246143355358*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"e479b02f-8fd9-4f3c-a97c-8e2563878144"],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalFNames", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*FinalData.mx\>\"", ",", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"NotebookDirectory", "[", "]"}], ",", 
             RowBox[{"\"\<analysisCode\>\"", "->", 
              RowBox[{"(", 
               RowBox[{"\"\<dataPreProcessing\\\\\>\"", "<>", "#"}], 
               ")"}]}]}], "]"}], ",", "\"\<EmbryoFeatures\>\""}], "}"}], 
         "]"}]}], "]"}], "&"}], "/@", "allFolders"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.66772847368152*^9, 3.6677284965187488`*^9}, {
   3.667728695339083*^9, 3.667728699863025*^9}, 3.667729303067416*^9, {
   3.667729834165241*^9, 3.6677298411696854`*^9}, {3.6677300813488255`*^9, 
   3.6677300818792286`*^9}, {3.668944131048835*^9, 3.668944139176382*^9}, {
   3.668945092845069*^9, 3.668945093859063*^9}, {3.669723188823038*^9, 
   3.6697232165262065`*^9}, {3.6870851278044643`*^9, 
   3.6870851417422886`*^9}, {3.6949528668534245`*^9, 3.694952882790018*^9}, {
   3.6949529167514143`*^9, 3.694952937595498*^9}, {3.6950253049796953`*^9, 
   3.6950253383536954`*^9}, 3.774092636418255*^9, {3.850360783807339*^9, 
   3.850360813764567*^9}, {3.875244966194337*^9, 3.8752449901472936`*^9}, {
   3.8752460773889246`*^9, 3.875246079556301*^9}, {3.8752461762801633`*^9, 
   3.875246180311802*^9}, {3.875246239999807*^9, 3.875246241973597*^9}, {
   3.8752462815710535`*^9, 3.8752462854643116`*^9}, 3.891321314244313*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"8ded0ebb-c5c2-4948-9c9a-0fd088cde8ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "finalFNames", "]"}]], "Input",
 CellChangeTimes->{{3.875244993620377*^9, 3.875244998600618*^9}, {
  3.8752450554123373`*^9, 3.875245075386554*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"38e679ca-aec8-49fe-978f-380506e83287"],

Cell[BoxData["738"], "Output",
 CellChangeTimes->{
  3.875244999208582*^9, {3.875245057637149*^9, 3.875245075822218*^9}, 
   3.8752453728360577`*^9, 3.8752462022859335`*^9, 3.875250803200491*^9, 
   3.8798273196434455`*^9, 3.881393760605291*^9, 3.881394598104896*^9, 
   3.885469122203333*^9, {3.891321291506055*^9, 3.8913213173890696`*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"a5cab57d-a17c-4424-811e-80b33c6eff55"]
}, Open  ]],

Cell["\<\
this also includes embryos at stage 3.0 which will be discarded below\
\>", "Text",
 CellChangeTimes->{{3.875246296675658*^9, 
  3.875246312838209*^9}},ExpressionUUID->"c2c9e3dc-706a-45e8-ae9d-\
e7447430d0be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "#", "]"}], "&"}], "/@", "finalFNames"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8752450796764426`*^9, 3.8752450875588694`*^9}, {
  3.875245190909305*^9, 3.8752451923955684`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"66bc7d85-6d76-40f0-a824-e94981371af1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Keys"}]], "Input",
 CellChangeTimes->{{3.8752451318072834`*^9, 3.8752451349903193`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"311452ec-a481-4d49-8d06-b94b488aed14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NucleiFeatures\"\>", ",", "\<\"GlobalFeatures\"\>", 
   ",", "\<\"Staging\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8752451355227623`*^9, 3.8752453845490775`*^9, 
  3.8752462166587334`*^9, 3.8752463317596316`*^9, 3.875250816207575*^9, 
  3.8798273325003333`*^9, 3.8813937742348576`*^9, 3.8813946125193214`*^9, 
  3.885469139610461*^9, 3.8913212916356516`*^9, 3.891321331971217*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"01e81e78-713c-4d57-92da-062ccea4b6d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"nucleiFeatures", "=", 
    RowBox[{"(", 
     RowBox[{"\"\<NucleiFeatures\>\"", "/.", "data"}], ")"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.662789745744736*^9, 3.662789750565136*^9}, {
   3.663306026319808*^9, 3.663306035175808*^9}, {3.6677308837795715`*^9, 
   3.6677309010644827`*^9}, {3.6677311478268642`*^9, 3.667731150697283*^9}, {
   3.6689454081034484`*^9, 3.668945411535426*^9}, {3.669955063732564*^9, 
   3.669955065198964*^9}, 3.6949531318909254`*^9, 3.836444587281843*^9, {
   3.87524509493503*^9, 3.875245095678068*^9}, 3.8854691266240993`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"3d17469b-6e0d-47a2-a90f-75bda061c604"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nucleiFeatures", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", "Keys"}]], "Input",
 CellChangeTimes->{{3.836371196231142*^9, 3.8363711987266307`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"f22064ac-f747-4ee0-9c2e-ed21aa3eb761"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Inlier/Outlier\"\>", ",", "\<\"EmbryoId\"\>", 
   ",", "\<\"CellID\"\>", ",", "\<\"Size\"\>", ",", "\<\"TE/ICM\"\>", 
   ",", "\<\"Centroid\"\>", ",", "\<\"Dapi-Avg\"\>", ",", "\<\"Dapi-Sum\"\>", 
   ",", "\<\"Brightfield-Avg\"\>", ",", "\<\"Brightfield-Sum\"\>", 
   ",", "\<\"Gata6-Avg\"\>", ",", "\<\"Gata6-Sum\"\>", ",", "\<\"ABC-Avg\"\>",
    ",", "\<\"ABC-Sum\"\>", ",", "\<\"Nanog-Avg\"\>", 
   ",", "\<\"Nanog-Sum\"\>", ",", "\<\"Dapi-AvgLnCorr\"\>", 
   ",", "\<\"Nanog-AvgLnCorr\"\>", ",", "\<\"Gata6-AvgLnCorr\"\>", 
   ",", "\<\"SurfaceDistance\"\>", ",", "\<\"SurfaceNearest\"\>", 
   ",", "\<\"PCGNeighborCount\"\>", ",", "\<\"PCGClusteringCoefficient\"\>", 
   ",", "\<\"PCGMinNeighborDistance\"\>", 
   ",", "\<\"PCGMaxNeighborDistance\"\>", 
   ",", "\<\"PCGMeanNeighborDistance\"\>", 
   ",", "\<\"PCGStandardDeviationNeighborDistance\"\>", 
   ",", "\<\"DCGNeighborCount\"\>", ",", "\<\"DCGClusteringCoefficient\"\>", 
   ",", "\<\"DCGMinNeighborDistance\"\>", 
   ",", "\<\"DCGMaxNeighborDistance\"\>", 
   ",", "\<\"DCGMeanNeighborDistance\"\>", 
   ",", "\<\"DCGStandardDeviationNeighborDistance\"\>", 
   ",", "\<\"Dapi-AvgNorm\"\>", ",", "\<\"Brightfield-AvgNorm\"\>", 
   ",", "\<\"Gata6-AvgNorm\"\>", ",", "\<\"ABC-AvgNorm\"\>", 
   ",", "\<\"Nanog-AvgNorm\"\>", ",", "\<\"Dapi-AvgNorm\"\>", 
   ",", "\<\"Nanog-AvgNorm\"\>", ",", "\<\"Gata6-AvgNorm\"\>", 
   ",", "\<\"Nanog-AvgShifted\"\>", ",", "\<\"Gata6-AvgShifted\"\>", 
   ",", "\<\"Quadrant\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8363711997259645`*^9, 3.836376154687847*^9, 3.836445538400148*^9, {
   3.836445582700813*^9, 3.8364455958812847`*^9}, 3.8369648342275195`*^9, 
   3.8503607365564785`*^9, {3.850360804276903*^9, 3.8503608184485836`*^9}, 
   3.864812237974959*^9, 3.8752451209742317`*^9, 3.875245210934024*^9, 
   3.875245384709549*^9, 3.8752462168120356`*^9, 3.875246331920973*^9, 
   3.8752508163706484`*^9, 3.8798273326429543`*^9, 3.8813937743734856`*^9, 
   3.8813946126868744`*^9, 3.8854691398048797`*^9, 3.891321291735592*^9, 
   3.89132133212381*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"008ec890-56a7-48a4-a3a3-8d97efb2a589"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"staging", "=", 
   RowBox[{"(", 
    RowBox[{"\"\<Staging\>\"", "/.", "data"}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6950103322614956`*^9, 3.6950103483514957`*^9}, {
   3.6950145882002954`*^9, 3.6950145942998953`*^9}, 3.836444589220151*^9, {
   3.875245101587541*^9, 3.8752451022829065`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"51428dcf-977e-4111-9d80-049057def257"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dcgGraphs", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"staging", ",", 
      RowBox[{"(", 
       RowBox[{"\"\<DelaunayCellGraph\>\"", "/.", 
        RowBox[{"(", 
         RowBox[{"\"\<GlobalFeatures\>\"", "/.", "data"}], ")"}]}], ")"}]}], 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6950096472746954`*^9, {3.6950096777882957`*^9, 3.6950097133406954`*^9}, {
   3.6950103534804955`*^9, 3.6950103732738953`*^9}, 3.695014613784295*^9, {
   3.875245111532934*^9, 3.8752451161710267`*^9}, {3.87524523814072*^9, 
   3.8752452429795384`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"69c917f2-a8d0-4b05-b3e2-3cc5ca58474c"],

Cell["Form Simon\[CloseCurlyQuote]s thesis:", "Text",
 CellChangeTimes->{{3.875249797745035*^9, 
  3.8752498031541867`*^9}},ExpressionUUID->"41f5126f-c804-4674-a893-\
81dab6fbe74b"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
GJqxYCyCtFtz+626BaF1NYUUhU0ZEJPeSDE1YrAAZNG0q/nBDxCFKYvHwNkQ
HwKt7Wq+zdxjrKCoLWw9aMugJs3qamIv76waZD9GR/1QhybzoVuSpoOPpz2c
z36QriZAiyY6rCZogvFsJhphOWveJbvYcP7b/0g2zdk0dVd+HPyZaWye2r4h
k6uJpcWYbo1tZK/6EAYLQJYPfIBAf93bYw64mpgg/Vbs3XSBZqIcG0eruprv
i+96eejotKr1YCqDmjSjk1Bf8WD+kG0pGUeMEcTKKblM809g4QO3JE0FQ4tO
7HfvpKBs4Gp+sGiow2qCRhjPZrb5altOrPTgOnMtDu+nBPqzadJ/Ht1/fkaF
2gWRdzX/eXbiHhFnXpji7MweBcTAhzBYAAp8yAMEmnVv9xCjVjjxFhU8XjXP
bLp3oJ1zj6luN1+JFwsk0a3Wrrcz44OtrZcGrpnXt/vsqKtsBgEV/Lk1lGdi
7hO8yneUickSn1sF+A0lewq4Wy7c/26pC9dKy8ry3EviWYLCW54zek+29587
m2tnH7jAdmX493P0Oq6+9YYIL4+ePdzSPzBwomH/TTclh1JJIp87bEvOu+ph
OW352oARI7t7+VEWazDBjbi1X/ef6u+9xHGBia3ND8mZ5Nffhi/TU4iaRjNS
frDlcmc7+cz2tFywfd2QXhpxNaUV337l5b41lt+6+05a+H89zSMfF9O/Er+8
s2X4FHt9LqLbwcIZDxyX7i0irUfMXZr6SnZPSNRb2KzrFo/zXxwReWy3u99C
U33Xs7RmRyjh4wsmuGw7dPDAstAFo1z1F4QUvqEtg3y0Of0+EWFr+vpwrSz8
VwfNG2WzaZlXL7GTUBq5aSIZA2+k77CdqFTOrbWGXAThmE1zuVminpjR+B+H
bIrmk84Pa6dWaG66KjN1OqE+b1j51Zcmy4J9/jfUNuqJqNVISxJ9i6lfMOoe
VvDkqNs4v/CgiJ37V09Y6tzTVFRyoXd35pi3MXf2qjX+FlyuP7Hs2Ng+SN+j
WZ5OpZZ/e84kcreCaP8CzzWhmPiIlPbClXdiGTT5fXFq4BK89YNXzRzAXXLq
GmM5mQuJw6xF9Lse2O/G0Ii0pVWtw2KC62cDjbpPDlizeJjpopP4F9VVb+YH
8dFHzHpFaw/pjYbUSG6NTz80fvb4blrmKza/LJe1Fei7mzNc8e8iiO5w4+js
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
JOchaKFk4x9YU5KHOOO0SiIa+SZWpzlaWZItrjnNRivrwMdH1jUfXUKebEd/
As1DszgJJK3R5enONyyVnF734bsubRgsP2iaBrUIy77p/7le6J1/c/ycOZ1E
Rzd+aJTuXdHRhpdSmIufsMybn1HR2gVqRuTat7HNXZkfPbjjktgU0WllZFo/
ym0FN095dTeKIc7jJZKNt5D1+BCbsjI/ZlAruhnyTaxic3wIkmxJzWleNKsD
la/jRhoh5sPi/qY5w/aTAKtK4fUBV1NdsPSLCzojRn5NTNmtYSdB5tat0uWJ
k9fkumebcF1amcKUxWNUs2l0V+KH3WtMi7C8oOmckU7JZcIXhKO8JavoTyGX
Xl6d7Db0TL5GHq0y5UKviWO4KbqqVvB4LY8XzXBo9ceCXPs2srlL7oUOck2T
HHks72riTfm7W7ew+0R2xRY7QvEDaMqq6JVDz8jWtLXTa8s3sSrNoa4kVbc5
avFhHL5J06bqolkdUN/V1EAVNE6TrH1tmisXXE110ZCrqVknQZZW6fI0rqaa
rssnCfrr3h5zVLJptFdqVIvUNAhvM/cYt/hxnCX3w/QR7o5P5eRxTbma/uMo
mqPoauJ3Ngu517KuZqs3JYZmLOjhfLbtu5pqSlJ1m6MeH4KrSdum6tK6OqCR
KmicJll7cDVbk0/A1QQFUwKadW/3ECNVbBrTla3mar4vvuvloaMDrmbzohlX
M+vy6FDKIc50rmZVtN/oy3n4T5+Iq4mhRSf2u3dSqOnH7mqqbnPUptVdTaY2
VZdW1AFNVUGzNNXagyfQmoCrqT6SSNQOW+PTD42fPb6blvmKzfgJUMIeeuaY
tzF39qo1/hZcrj85gyqNXJ265cBGG0vP79YvNe0+0s/nVgF+apQkApy75cL9
75a6cK20rCzPkQdKvS9ODVzCtbLwD141cwB3ySlyTQoTXDm+YILLtkMHDywL
XTDKVX+BuL5010vvv/3Ky31rLL9195208P96mpNH1PGjt9sMnDxCB0GM9O0n
m5iYmIYm0a9PsFxJalH0rfhga+ulgWvm9e0+O+qqdPmMXix04AG3btaddclo
WxOea0Ixsddg1Tyz6d6Bds49prrdfCU+auvlnS3Dp9jrcxHdDhbOwvJQonPV
lRsNmOBG3Nqv+0/1917iuMDE1uaH5Ezy/MfSyA22xJYWYnsLNSRY7gZ0tc5J
CjEjZCgssztRu7JnUeZ4gDHX2mjjrfyGarqSS8KqrV2uJh5dYDb5a50uPmcf
XP3WFa++5LvCsh3eYKGDxyqP2cZQqgZcnn9uWPnVlybLgn3+N9Q26on4pEJ6
oUnbt6mu5j/PTtzLlTY8nauJ5aScyCnDfyKtR8zdqx6W05avDRgxsruXH1Vt
0KzfD4/hcmcLlXk2d7RNVIawFup2TPqmxAqzfp42tb/rOD+/oHmDTRYfjia6
KVs/pSuMCtTyb8+ZNLbf6L4cYQty7ezECi8RzsKVd2LlO2yDssaiAxNcPxto
1H1ywJrFw0wXnRRfzNwx1XU16SVZ8OToeDMXf6G56zF+x2HJuZMsloRekkIL
sG7xOP/FEZHHdrv7LTTVd2WZbVOmOfSlalzHVISlTZlNCj2kDkxz+WG5naWn
DyEQ6x9SZL6iquKhpZdH6dFs7rN2vZ2pYLRZqkCrMLTW6fyL9Hlsox7Dt4gz
dmmfora1J+qdkfKDrVA+Tj6zPS0XbF83pJdST4BJadVTQqYxiwap1dqWnKeg
tPLbXuT3i7E0ZXmhBoznC/F2KqpPxTSC4CNs9Ozhlv6BgRMN+2+6+YSqq+yj
RmnkpomEygltgsN2vGXrEk66dNEV90e2O1OtE6N8KI9upLmWQ87VpHVdNAER
iar1lf3o07nF8WOMEAvr+GKMf2KbZaf+R7Ir8StqSuPtP9dZLopwICNX9TwW
PC4jqoXyU6Z+w+G5pZUSvxIR4HpDui6P+7soYkU/LZ3AG/kNdfy7M2y05/rl
ENH1WPYN/246nhefYIJHWweNSywVlUS6DoUyXC/85f2LI8aIwVij4DiyL9ek
z7SUxu2r/vrMcCWuRbrtBwWITlytids9vJ0kJpZNLHTIvxqU7vUZsPs8bj0w
NCdgurbb/AyB7KPlFJhJDkxyowNNOjnlS/MzL0QmAnt5N8Sw+/rkfJFOKp/A
Ya41vjI1FjE1P18gVvC8pKVDPB7yWVuQDKvu1bl/YMirlzf89BCjVfvw0fz+
2ZkdOdNPPRDdq748gddv533mvoOhL0MW6owen0BcguXcCjC2+U34M9ujNeRq
ykHnakohOnIfa8tYsglK/tjZE7Haf000huTd29Jbe3p0CqlE+G4UY1EQmrod
U74p3+VGD9ebe1Z8rDzeT7sO3BIlGtRo+mkBS2FUgtaLI4XTp4vPL3QdlrWx
FEFTz87V67I6idDemncJTgbLr+exd0wNzGoKbzhpwA5SFd/lHhmkPfHQ1Uq5
OW05S0IvSawmLrz72shy8rtKF3bZNYelVI3smIxlkBOXEpOiCCkiI6OIR6Lu
jCYcn9ypR1jaG4xNXEyKJ7+5L9ePhxh9abuW1mjTVoFFYRisE/uoR/8tddSy
ga1psKdJQYZ6/ldEbgn26tEOrq4SV5NZPdRSQvYxi6Ztbkc5ttO2nznpFJ3S
ym97kd8vRtuUnSfMGk97NzWNp8LjmEYQXPjX5w6fmU74tEJdde5sGPFHmaSO
ykeNt5kRfRG9ZWFFYptQHvndl+EXhPJnv7O8rirIR0bzm2iuZR/aEgvoxIN6
heC6hxU/v/6iBKt8cWQg5z/B+8rEpa6K3qivbXAoq1ZyPbXnkk6C8/E7+OWk
VbEgHCFU8Ox2ulBL65OiHNtrr7j5WvwFYgOdq3dW1tlpXaT2p+Htw+DJYcUs
11eJ7z9WuilDpt0142rqbrsvFjG1sgJWsdAg217k+7g4mh17fHHhZ1q+1/Jk
Hi2rwOrKjYbKwtPDtHqEiA0LcRe8O493TSMVXKmryVprLPWUawetOecyyNvX
xG0ZcQL3FdlakKwp0m7N7bf4y+Oj688FxLeri+IsOnE8/J7/P/a+Pa6m7P3/
nPMKeQm/+NRHLrk0Gfpm+NTQlBrlUkKdXCqUe6QiCiNkmhS5TWgYM8qtXBvk
NmJQKGkQI0YkIxRlZOqgONXud/baZ5+zzzl7r7336USN9f6L097r8qznedZ7
rfWsZxOr7+Kr890jnjLHb4MYb5H/ifuE9y1aGfCZUCbPv9mr/hhUs++65HcY
5WG54tU+CPEQWjme+Zt8uPjKd+0FztvTa+v4G6bKUGJPI6aKbJTrkTowC4xs
Ybj66itlM1TsFNoYLoBQTQaDhQ+WOvD7ID1EwXIHTgT5Gy6IffkGJhYdUE2Q
XkZxm6Akxl9kaXuyRLWDKp6ESZJ3n0T4inxIulJXV3M0elBKPmMzYJrD0irt
DJOpDSriYnUpmtAUUXXFb0P+Sxo7b8WjsWImp03bBahPo/dO8FmP9i3WWjh6
+zeS9BG9VMeIAxNgVo9i7krINmfRAK60amLUUAzaodSN89SojmEGwXv3MnZe
ayG5BMMnJpEoNPYlw9EYHcC1mp59kh+DsZetr/1sEgtqWUvmJB8ydVt93bUC
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
WYemGbZdduExLsj3r9LcTbRzyNIL+8Z0sj74kJx4Hl2JMDX+LuMxpqi0S5ue
CyOePjoXYigwX7qlrEaav8Bb9LV7xj918gBdJ9mSU/r06I7b5Rjc07LICt5y
NflUlZ4XWxouiZUTK6nk+jR3A9Ln8/LSKpBJ0rN/wj0puGQk+N+mY6ByrChi
qoyH9V2X/A6rK43xx2lvL8KJ0QGTPoqYqT9IJhawisy/uKCX02/g32Wbgz4n
JmLZjL9gvJ7XjFwJ+Rat8iu4DS3AzGXo63ernBguUOYor+wyec/5KHbdm8So
nnrtNtwEC/93JSm2ovZLtpQTc86rOxv6ybvAoBXQ2Y0CGqYBoW2szEcngFDN
YZ7ZFTQtr72Q6NZcb9H5Z/K/EfdJPQPzqsgXiclRKrl/Cd/thz2vgZex81oL
SQmAgRCFxr5U3VfsEoGrN1b64OzDF1jlwx29hf9VDBZ+9yTKSM9kWx4NQ8Ku
HZrUUnW2Aopnuz75LUZ208BgzTXSj6sJR0NWODPs1G3XfVBXbWX2NIcDj2Fh
YjQKUPs208NSMNL3BqizfMs3JgJSVu9KD7l7ZAJX8zRiqshGhXLI/MnIFoar
r76iqwcrWjlLv5v10SLQKyLWva/tyZLaByEeQisFlZU16Mp37QXO29NrNXun
BdUEi2JFSDkuHEtZpeTTNJrG1J67TyJ8RT6kactWo0ejB6XkMzVDXapMHZFK
i+KCB8crFmtQaWgCNr0y6IyEs3K+ebzT2ev3CiA0EemI3r9IsREKZ0fQeC0m
avQ0Y5J7TIkU+E9Sqerevzw5qNXq+p15wQ0TJoRqSfqIXqr2Dj8FxgqXWn33
+zvs1vGZrZSrMNnUI/zMMrmQ8y2Y2rcZPg5HijDgNkmR4h2Z22p1svoA8KCa
WhkXlGoW89B2DdHRuFw2d0Hr3iF+TxMNagsa8lEURZAQSAMozRN5xZ8iLb06
Z9agI8X0L6pVpHFLqIcoOKYEPExcmTFcIFN7ng4Z35QQdYggWRl4HJ/ch3tm
l5OVCoiJCZPcPPtAgtVV3P/JTNlO4GkpcygHT8sgK266QdZbER9u2kxljKg+
n4/eqqD2wg6LqKS3tcBNCURTD+fiRdS+SXftIlB0U1J8buI4fQuKQakCDIfI
/8R9giwVrQz4TCgKPl1YVwN2p8m7XcCNgN/rKNJg4Db00DQHsCHgsfsyXgFP
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
t5wbvjjIyXb2XpBXU/EiSPsmf5IA3fO0kN48G2lhPHxJQNyGDTNdvFN/T48w
1bcZabki48XdMF8iN6OBdeeRHgOS7inmT0xy9pcwS1NxSOAct/G27Hk1o0eZ
yVqimiCr/J68myAbleeeO3eo1c1flxDgq8wMOSfsLjWr1vXkPhxj4apKL/m6
tx1mGzLLadlvipSh+M5P2qh2gafkKQSx26kzesgXvMpaivN+8RLjadZC8aRY
QQlsadxO7Qvp3dkpwD1oyhSnKTOUucuK7+0TO5ni5YSMsR++G0/9V6OQLdG7
21dVdeCeBlVR5tUEr3iDPJmS4lTv4cZilw3bt6/zcFr2a+65sbb6A0zF64hM
GuqaxtyeuuJI2ZD/HG5nHbgkOHiUj+Ushhx66qN2+zalIy5rEl7coHRksmfa
s1dpo53wbKiy50fL+lVDWzujTPMuR/duO8jfT+zsnfpEyqYzhJLwUU5J8emx
/Tr7us1x87aL3px7aH23blazfJzi/4RwMjq8uLfPyXRQUEiIi93EXbpJj8Zo
mKczdnIRwrmjEVZd3ecHBrn7Oi7e8b1dNxDdRbkZqgbZMnBzRFcLq0Xhcx0d
vVJzLq+16Dxxjt2E3Wn0kbRMqK28u3ym6TDHxaGz7GYv0NFnHHkZl6ZH/VNV
be4+5qjtirya4MWvYijqreFymdwFo3uHDR+dCBrOFlSKsoy88ELNO925Sum1
J513evfswCDL1T8s/9LZOXThspCBlj7AClT6LvMGhapt/nF/vEq94MxJKrkV
vujrruazl4bOc3UaERtPcVw8HbLcBIJAzlXHHzJBXk1FZ4kExQFKgb89tNGx
mYACoZWv5+kn4M+MnvZseii7rDjpxmR56mPKw4GeQ8TbIhcRpmu44MDNcAa9
JTOUMmbzIIDPxSsmfGE5cf6sWR6esen37ydsndvXfMy8WbM9xFEnL7M6Lhlt
3u3q1Hn4oODFiyYNHrw2HUypeFbelYM7mS/YvHmzf5BT9K6cTVHWrY3sfbzS
ziexcxtN5CRbWk6/cCFxVnjY/pO/7Zsd5LQ88s9yqurycfIE/rq4sIfdr8/k
j5WuD2xHXV3Sa4XKNO2yRk59VS2R1B5apkFLwzhZLkKjwJvEUIej93UyhyEg
ICAgfOKQXtjr1t1u+7V8OUnApCXnL+wc4ijyqV+k8YeC9F7OkfkLe6zRCGlG
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
0GBMkJZqvis96Wgu+F+fPfcr1R5/e2ijYzPh0LijcnUC2a6EHr45xOYkHqw7
VNixw/fXifh55iEAKq2w/bqXN9d3xP9b+yJzhhsInNasCwKuN9Al16eN1PNV
WGV1Uexs+z2gbfR3J5mfJ9J8BcijtekBFrOEW1aGu8C9PaRGDagfnVcUJlm1
XHP9HXBWG4e2UYbcS3NOuLoyBZbXgY24eE8j6vOpIcYt557IlUqfcfXDxATd
keQktZU5M0Z1FTWPyirPmGCTwkY1ieu0fWPIinCr6S+ARsKwGBq0OgY/L8WF
46xcC789sKrjtwwrNaaRqoLOR+9lb7kJlVVgkqMb7DcCDedNNRmaSuP52YYG
rpP8h6ZOw7XyGywmwGdV3VkWS2u5UU0aVqDZU5U2w8xWs41MhISZw+iAasI4
m4xqYnSsg0nyeYcmtFS2X0YhIvvIg+h4eH6OkKnKlpWDO5kv2Lx5s3+QU/Su
nE1R1q2N7H28Mp4VHxhkufqH5V86O4cuXBYy0NJnVypT1Kj05tlIC+PhSwLi
NmyY6eKd+nt6hKm+zUjLFfRhNkq8P/FDx+EzclUVBiu+t0/sZIp/UztkjP3w
3cq8mvhH50N6d3YKcA+aMsVpyoxzirPVqtJLvu5th9mGzHJa9huZRQ3PABY9
ysxybjjIkTWXzKtZfm+XE3E3FqQdCwi7y8q7qiVpo9oFnpIzKOx26oweKpGN
NWl7PC3IlFaT5Zm+sLzL0b3bDvL3Ezt7pz6R1VFzN8xXmetvTtidq+RbJm0c
PQck3WNgZLJh2hxu/qVt6JIgp0l+l//IjOpjOiFscZCTXbiis6+fZz+seBox
TQ/fmIL2BXcXE9o6O64/tD33BR/GyeSOXpdmBU/vOVY2XksnfW6+8HCaIrtd
2Y4oh2YCuo+Sy0ThqbihTGQ+9NyTrqJfPPNqgmRilAxyXmLwWXY8jVhQAplX
M40i8DEaNaqi8sxOsanFvHkUjdIpZI0ZazlsGJljFs+EplBFPCeVk4GAJtcK
T6rJOAQyl+Vq0G3XfdLl4WsQT2NPZ1JX6eqiBZ7Eb7A9MQSEQXng+l+WEPmV
BcgIJyBSnpJJ3mRWGRXu0F1mlTIFtp29F+TVhIwL3fM4QKyUwAS6sKrDSnas
cTXqPHPxJKfoLUXvVO10zICkG3eprkBeL1ONaiCWAwb6oxcSeTWXzTa3olya
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
AAAAAAAAAAAAAAA3BihYThg=
    "], {{0, 197.25}, {666.75, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{666.75, 197.25},
  PlotRange->{{0, 666.75}, {0, 197.25}}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"6243039c-5f5a-4c09-99b3-8770aacae8bb"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXtcTdn/+L9Pv5DHhF9M3pohl/OO9MllijElb12IUCdUjHKnKKKLUW7J
LbcJDePWuFRuDZPboEFFSYMYaZRk1CiqkekcXXe1+56997nsc87e+5xTpxKv
5x9UZ5+913qt13qt117rtV6r77xlUzy1EAQJ0BH+M2XuSht//7nBU/9/4S+u
vgGLvXwXLnDwDVzotdD/m3n/n/CPHTgIEiz8Af+5AQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQC3ehi/TQ3C4O2Jr
VfsKmpGyc1T/yb6r/Eaauh+7KqjTaIHQ0sujyBJ12Ha/WqO3BgAAAAAAAFqc
wrvru6nqaqJJp77t2iMs7Q0m/KW6OG5kt7B77zReoqroTX2a4mpWvo4baYSY
D4v7u16j5QIAAAAAAADUpOR+mL5qrmZl4elhWkZr9r0lZjL5h9f25yBW+69p
dl5TSG3sDi64mgAAAAAAAB8BqruaGZcWdERmncskf8OeJq21sjn2tEzjJWqq
qwkAAAAAAAB8IKjuaqafde8gdTWbD3A1AQAAAAAA2ipYbUHUAS9j7uxV/n7j
LL9dEzavk4yriWb9fngMlzvb3XfSbO5om6iMYqyh7mmQx9h+o/tyEK41187O
zbqzLkLdT/QuM6I38bu16+3M+GBr66WBa+b17T47irJvCEOLzhzzxp+7xt+C
y/Vf9fhfTPSRoPCWrw/XysJ/ddC8UTablnn1YnE1c5JCzCaP0EEQ3Q4W7q4J
xQ0NZc+izM2FBeJaG228mSPaWMQ1if1bUiXB41XzzKZ7B9o595jqdvNVVfNI
FgAAAAAA4BMHK96/uvsgm8v5pLuFCX7eM6E9xdXMu7elt/b06BSU+K1074qO
xuKgR7lZTfn9RFiuHw8x+tJ2behL4t41cbuHt+u2N5O8E8Y/sc2yU/8j2ZXE
Z6Xx9p/rLA8rEH5YVXyTZ6oXHF5AlggVPJjrpMs+q4mhGQvGIqbm5wvEzmpe
0tIhHg/5oo/zg6ZRXc3SvT4Ddp/HnV4MzQmYru02P0PQJCECAAAAAAAANPx1
K7gbYv9TonTDjMwCev1zP2eOmXX8P+JPCX9SdL2cq6mw8l4YMgvR1d12/73o
d+r1ghdHBnL+E7yvTPzgquiN+toGh7Lq+YfXGLYT/iBdwFdlAR1LPeXaQWvO
uQzS16yJ2zLixAOx30mUROJqkgmUxLuEsMcXF36m5XstTz25AQAAAAAAAMoo
j1zbC2m/8S5lUo/qMb5/ccQYQeYG5aPiT6tfnzFDdJeGFdep5mpSl60p12O3
oxzbIdNOp0u8QeJTjtfFF4kOvRArp2TK7iKVYjXx7fCdOPOC8mqEDnJF8owR
Z/Kk7rNMSTA0J2hGFye35BKMttgAAAAAAACARsB9MDkvjup6ET8j9tYRMSFU
dsanVmJNcjUJ7xGx/s47MpJ649CrT3OFrixi7Zr2XloiFbcFFYV5aXXD50Ub
/kp0cA8roviO8iXB0DcXfvme52FkZLpw6RL7DuBqAgAAAAAAaB5iVpPZ1VSc
1aSi2VlNkvpyfFazUa5mQ+7NgM6IZURayV47u99eUz+RXUAXPPb10Blguudu
DorBrCYAAAAAAECzQcRq8qJSpS4fe6ym0Et8dMH9dKqqsZoMrqZirKbwxgW7
3WOe47GaX7bvffS59ANVXc36ihRnU2TsKOdRzin/ynxCLQkR1UkJTxUXu/rm
ptFxOUoFBgAAAAAAAKgKhr4MWahjy0t5i5G/Fuz8zlwL6bM5uor8w6tHO7ja
boeviJIUCQovTLU6nkNsG2+Kq4lvdd89prNRxKNi0stF0y85OATlVDQ08PNP
W+gMCYvmi5942X44IhdQykDF6R0jtBDTLdEVsrOl1JLUJ0U5tpd615Vx+8Z3
5Bhuii2LWjECXE0AAAAAAADNggr+3LppEtd06ZpAT3tr34h9y4k8lMgQi8tF
+OdYYfZJno3hZHt/f78pVuOPK+TVHLctsuRhzHTj8YO0EV3znhM9XBPyso/Z
TLHX5+K5Lp1NXGMyM8XX4xcsD3qKJzLCBNd/DjI15Pl5L3GcbkHJq4kVZv3s
xuuNP9Hb1Y53KHRFH6JEegHhb9mPvfwnc8+AL354XC79Sxm1JKahSfm4O71v
s+2XRgF79+718rHZdCx9z0bzTvpW7uKNQgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAtDB/3Qr6vIOFu/XSlUErR7v8l6Pl4Dt13rzvAu08BrfrtOuPmtYu
HwAAAAAAANBWKdu3tN+hBJQIFS+PXNOunTgFR315Am9gzF8QQw4AAAAAANAa
vH8T//tT2ry/HyZoVnz86yqZP9VXJM8cc+kN6U/WZ8y3QsZ7PCS3NtaX35wx
KaG0aY/8CEQEAAAAAADQ8ggKr86w3fdHcRua9cMKMiImOV/7m+JK1ZQm/ZxU
SdahqvCMOSXhcH3lk5M/FylzE9Ent/b8nksvhI9DRAAAAAAAAC0MKkifN2De
5WdtyIkiwTJ+dR02M/1fuoLn3VqlJ3umhlIqX8eN7KflT5cI7qMUEQAAAAAA
QPNTeTGiN887q1z5lS1ETtI6cxN5FpM5hGXB0JyA8V/sOl+h4EnVXdn/jbZ6
+4BK967sz0EQr5BChbN1P0oRAQAAAAAANDvVRXEW7X2vvWyrnsjTq4t7mJ8v
kCs+VhAyR+4gYHawl3dWDbIfo4Mg1q5p72U/+zhFBAAAAAAA0OxgqScn6avh
kn1woKWXR2lPP/VAxpGqL0906IW4++VWq3aT+ooH84dsS8k4YowgVk7JZTIf
fpwiAgAAAADgo6ck+9B4jwUm3V1/uvo2N2WHnfnsgHUB5oY2e86Usp8bqzGI
2b+5Qfky+2UwwY2zwZNXzTIymBVxuKBa/McrMYssbE89rxT+XHRw45jO+gHX
MjXpvaCCP7eFzHeYZ97HPOzmEzJhkfCPj9csNV8eklPR0FBVnODqoGNrG19Q
Ty1tftA0zqKQAmoV3mVG9Eas9l9TUYpo/I9DNkXzq1+fMUMQrkns39QPP1IR
AQAAAADwsVO0dZR/SkVV9Mb27T8f5bf0cRnuOmBpp6Z0NDiUpRAv2Bzgs3/t
um+PpT4My0maY+eXU1GVwuuD6IrDHfEN3bqIru62++8bakviRugiCKK7NKxY
Yy4xVnpw2fBjKei7u+u7IZIkRdiDcx46CDLWNY3f0JBxaUFH4WM5XpdyqN+s
jd3WYei4RDKRUUnW6fkrVozx+EoLMZ81zn9tQOo/ynw9ft4xO7vfioSX1aa5
chEDWeF/fCICAAAAAOBTAC295OSQWFqf5W2PGJvG5Ip2dGC3oya1b6lzbYh5
PNlt2vXPA0xW3eE3lPyxsyeCGA+KzSfmx4gN3Yi5aB0Z/SNpk3Ev7SBxKqGm
I8g9OJqX8q6hJm6PhRaitzjkFTEFVx65theCGJA5i7DaggPbJ+tqr7j5mvpV
ocTG6cpNRaoOVhQ+Zswlcmt53UOPrxCkw7b7lHV3EBEAAAAAAG0RDM2/96iy
tvTyqE7Uxc2iMC8tU4vLRS1ShpL7YfrIrHOZ1GKV3r9dVC32Z5aFFRHTeXVX
9o/UQnQp5ayKXtf7YKKm3KiG6tK0tFwUq0mfaYkgWl4i349Iw45w5px9IvL0
sOqUqb0Pyk35pp917yDrH6oMlv2bnV3QS/HG7cKQWfJTgp+8iAAAAAAAaMMQ
U2H2P4kdklr+b3b/4cwLymuZw7pp/CgCkT8jmRzDg/0QhFLOBiw3cOjWdJrs
P/VJUY7tEVY4zsfv0Dtg5DyheGKwoTI/ZhAis6L9/sWBMR4P5XaIN9qPQvnJ
bkN72kuyBTlO7GmuiyDTTqdL5zA/cREBAAAAANCWIdI/EtF9BNjjiws/I5Zr
0aK0Z81/MA2xfYbGj3r/At+LbWQam0cUAXeADRCk/ca7AtEF5fnH7PDFXM2C
3Y5ybEeZGMy9GdBZZks4lho9dEO0fIrI9LPfduy2N1PtTS+VF3cNl004WRu7
g4sg3B2UyMxPW0QAAAAAALRlsFw/nnSGilw9/7LPsWf19Td+NDukubVXJohA
RMpEnBhiKk+aYVJhazYav2/orgs1mnaF5T09fC6OklMdQ5/60swT1l350ayj
+oGI73IP2k1ILJGpA5Z2yqW9OO6R5FMWEQAAAAAAbRpyKkya/pHYliL8tYKf
7DHqdH6ze5rEEwe2WxdZLucR1QoSJxgjX1n++obYFP8ydb0Bghj02PukEv+U
n3+C55zQHHOuf90K7oYYrAh/iztOGP/45hFaCDJlfgbhOqGpp2zXRyqmgSqP
XNNujGg7tqqg7x8vsux7VOHYSjnPDedTFREAfLK8fxP/+9OmrAGgWfHxrxXP
7gIAoI2A1fy5ap7tgPGDtPGQNrMJA81dnK8VtIBX1gwIXhwZqMWLkkblVcYf
5RmaLFtms/o3cdbEZqZs3wrtKd5ZCkYRK8yKneFuamnh+Z230/Klt7Ke3/D1
szY2817lw1s4P+5ZSfOUDhPciFttZWo6Y5zfciefA1HZGYl7xo81crH39+fx
tofn8BUfW5/lbafGRu9awQPfxQ76XDwTkbnhyqvi3TQ1pcnzPMhYTcSgs7Wr
efjvxeQnn5yIAOBTRlB4dYbtvj+a9KKIFWRETHK+9jd4mwDQlnn7aOcXCMKb
n1HR2iVp6+Te8NPvH/OizXoh5fnRg9vJ5fbRMCAiAPhEQAXp8wbMu/xMzs9E
M+5sG6z//SP57ZroH4mbRxgZ/c/NurOW+TyPm6+kviWW8avrsJnp/8IhXQDQ
ViE3R/QKUVjWBNSlviJtWlebyISWmUTVOGj8wd4mrmllyq9sPCAiAPg0qLwY
0ZvnnSUJNUHf3ZzBG2eoP3y4tR6ikMMh716IpYNo6pKff9rCCLEYeVmyxIah
OQHjv5DdeAgAQBvibfgyPWouQaAJYBlX5g4Y3yyBhc0NWpbg+LnPr/JTEBoH
RAQAHz/VRXEW7X2vvVTsLMR2PDlXs/65H3fBVenFZKJdi52xUt/y6dXFPczP
F0DnA4A2CFb9u9sQ+QMEgcaDFe/3H7zjDL+FDl7XFBj/xIbB6w4Xt4QWgIgA
4CMHSz05SV+aD4QKjatZQxw+26vH9w/EGc3I88KoYV1o6eVR2tNPPQBfEwDa
HvxnB7gIYqHsTOf6ygezxnC+oJgCgAkMLYjwtTtxpw0lXkRTTzms3lvQYnH3
ICIA+JjBCkLmcOYG5dP1cBpXU3F8kUuARtwzP2ga9TA4AADaDBmXFnRE9ALC
37JPMYGrCQAAAKhCfXmiQ7vu22NpVwDoFtAVbnDjJzttxHh9JJ+yg7A2dluH
ocpmRQAA+PAoj1zbC6HLqs0OkZBQKXKGAgAAAPj4IU5hwE9qo/tQuauJ8lOm
WiDm5mdeyKwiYLejxunC6QkA0Oaoz5hvhehKD3NsKZS7qW2Bj6w6QCNo2X4D
AG0CYvmb5ghaAmWuJsY/sXVoV9MDitk48VMhlEyHAgDwwVFVeMZcFxlicbmo
tUsCAAAAfBw0wdVEU3/2+JLOz2wAVxMA2ia5NwM6I5TDHAEAAACgabzLjOjd
GFcTffTbkq/F2TXrK7N+uVhM3QSUfvbbjt32ZsK+IABoS9Rd2T9SC7Haf03t
rDMQq/nJ8tetoM87WLhbL10ZtHK0y385Wg6+U+fN+y7QzmNwu067/pA/AQQA
gE8OIlaTaQsAk6uJvXq4abSD9ADKd0+2TJLZw1535UezjhCrCQBtCyzXj4cg
2iqdsqfpHejlURv/j6NOTJzuZxtS2/jOQwx9kxhf0IYmkAUF8fdz5I71Kdu3
tN8h0Vk/5ZFr2rXrffQ5MZ7UlyfwBsb8RbcP4P2b+N+ftqGZCDQrPv61mlmN
Xj/a2YfDcfZI5zdPmQCgLVH30GNgu3X0J9DRuppYwZP9Qzt+vcBxyRJXghUr
xrh8vjG6inIH3OCM8XhYLn9DAAA+RGoFD3xn/m/g5BE6Qh+OYzZhoPnM+Wkt
nFeTPHpMt+PSSxksZxSiuX9e3RTh399cF0EMgveVtd05UiKTpO3hq4I2lLcc
FTwOsPW9+kTaQPUVyTPHXHpD/k7sKRsvtvz15TdnTEpQ1CJB4dUZtvtoI68+
VLCCjIhJztLZFVUAVxMAKJTtW6E9xTtLpg/VPQ1yNTGZYq/PFQ48XGuunZ2J
a0wibhFr36dMHq44wTDtdDrFbtRnedtpB7XlUQAAgBYHy7wRoI8oZrSgAX2f
ExY8sKvlr2/akMNCBRP8vGOAf3hRmztopqr40rgBO+6LHcWa0qSfkyrJX/A9
ZZz/SPz/+sonJ38ukpu7RAXp8wbMu9z2TnLEMn51HTYz/d82V3AA+DDIveGn
3z/mheb8wvL86MHtVFqDAwAAkIKVHtk4qh2iN8v7qdJkSxj6MmT4lAttz2nB
Kc7cbdLn0J+VrV0OMei7mzO+MZHjm6+js2lWudGEIwO+opusI06OY0qdR1J5
MaI3zzvrw1nwyklaZy5fb5PFQU8V33UwNCdg/Be7zle0SYUDgNamviJtWleb
yASWRSu1QOMP9jZxTSvTzN0AAPiEQAUP5jrpIpwx4SqciP0uZ8+ZxJo2OPQX
hXm2Dwh/2+amNElq3l4e3d7zkryTX3dl/zfarPuAqoviLNr7XnvZBluM4OnV
xT3Mzxe01eIDQOuCZVyZO2B8gkZiZ9CyBMfPfX5tm1MNAAC0OiXZ+030kF7d
1yfnf5xmpO2v+7wN99WeF5Qn41QSZxybWcf/w/gtLPXkJH22Cz500NLLo7Sn
n3rwcaolADQ7WPF+/8E7VJhGUHYf/okNg9cdLm6jb+sAAHwAoKnn5ndGEIuR
lwtaMuAbE1z/2d+EO3vVSufRzmfOH562K6o5YimxB+dmdDaKkZ3bwwqfnp4X
4GdhYzBn5o1XouVbrODJUUfz+bF3UOHPT2+F9NMZsXZvoSZ3bmOCG2eDJ6+a
ZWQwK+KweC88JrgSs8jC9tTzSuHPRQc3jumsH3Atk1pcLO0kr7NpbB41Qr88
0aEXa0ZWwhedK5OrpNEFaCqo4M9tIfMd5pn3MQ+7Kd7lhAoer1lqvjwkpwIP
SU1wddCxtY2X0UAsP2gaZ1FIQRvaPA8AHxTEdki7E3ea0ofQ1FMOq/cWqJkT
AgAAQAYMfRW2vD8HMVoW8rKF7AkmuHjYVd8o4hGxuvP02pJOzZXKHk/QMdI1
jRqMWvMuwXV4ZDZaFb2pD4J8tecC8dKP+2a6CDJkR2w11lAc5qWLZyY1O1+g
sZJgOUlz7PxyKqpSeH0QXfHaN3liFHk4aW1J3Aj8sbpLw4qpExH42R/t1tx+
K/0LkaKZLSMr7ou26749luq8N74ATat36cFlw4+loO/uru+GSLbMC18BPHQQ
ZKxrGr+hIePSgo54NgavSznUb9bGbuswdFxiG0+yBQAAAAAA7n05DkcQrWkx
KS0xh0SkpvlmR6xo0wdxjJqM44QndxqpuzFaZldIdfFlax3zfeplvC8MmSXn
xNYnHTER3rm+Jn2mpbDKc85l4A8h5wklaU4FhTdmuOiYaHABuv55gMmqO/yG
kj929hQ6sYNi84kZPGJ3D2IuehD6R9Im417yGUXevzhiLD77oyTr9PwVK8Z4
fKWFmM8a5782IPUfuglIIoez7KahJhSgKQhyD47mpbxrqInbY6GF6C0OeUVo
WHnk2l6SDFpYbcGB7ZN15XPMYrejxulCymgAAAAA+CjIu7elty5i2gIbMbBX
IXO0tLrueiTaGi30KBzbyc7aCX2eF2nP+HIlwQQZaW/Um/msTXPlIl4hhZTZ
PezVk9tFqMjjktSXmCdEjCjr1IV3Ar6WS0zXFLDS+7eLqsUe17IwMlqAPDFK
l7JMXBW9rvdB2WM+CL+RuyNWjfgCmkOQm1CAplBdmpaWi2Iix95LtL+JSAqK
cOacfSISN1adMrX3wSzZKsKZywAAAADw0VBVEu/QY2pUQmVze5r4dg89xMop
WZw34224r5aRJpeqKdC4miSkxyXJS4+lnXJpjyCuUt8Su/3T0PALNDvuBS+O
DNRVcraSh99zWv9I5HFJpu/wcETh9ZQj5LDcwKFb02XzE2nG1WxCAQjqk6Ic
27PXm+N8/A69j0o69uK504bK/JhBCGJgcEjiW75/cWCMx0O5pFvgagIAAADA
x0F91dOAqT1WhqsR+027xi0L9uSqd9duezNl1+QJL0gaDUiuXAt9vEr07ztp
/Dqs9OT3M+3mGFrykkvEty7JjplsPcuBZ7hss5rRpMTsGY2rSZ4KKp1VK9v3
nQGC9NksOYgNy1s1NOiOpsMEiaVw6dxpLf83O+Fj22+8KxBdUJ5/zA5fbpaB
cDXZIjMVISZpaVzNxhWgyRAT15S509ybAZ0R6usGlho9dIOCLqWf/bajgv4A
AAAAANDGwEqPrO/hqPbhLHRr3HJXCLIe5MrnECa8IOkcHTHfhft4ldl7xm3M
Krq33Cnk1curPnriKa/6igdeoyKzUez28bGd1Z78xGM1XRXXwYnZTspBwPhl
CMU3K82OsJuZrjSzvboQbjZiLd6mRPiQCFcajojG7xu6S2EqlclvZIG4M2Wu
smkFaDLEscuURsenKxHpKwCGPvWlmUqtu/KjWUeI1QQAAACAtg2a+vOM3pZx
eS2VzAI/xmKYaOMJKvjDe5ZhO6Ef9Tcav3fE4fT66jdpL/ivQuZqS9ag6yuz
7z1FyXX2qWoHT9ad39VpIM0uZv7htf052svIDOcoP2WqhdDVHHvgGu4YY7V5
G2x9E5sh0WitIHGCMfKV6IhP7GXqegMEMeix9wlxkhE//wTPmSblct6t4K6s
2dppqHvoMbDdushyuZs1rgBN569bwd0QgxVkIn2Mf3zzCC0EmTI/g/Au0dRT
tusjSxUmbfHsAWPEh7wDAAAAANAWybu3iWsQdleF081fP1i2/0I14aHQrHHL
Unnz1BzbZUsGGy48/0DxZDSs4MkhKyOXFUHzRtnsvPUyZ+PiHpNGjx89+eYb
YhIOD4bUnnvu8b9ZlE1ARPaeAUQmIvXIveHXlRITKAEV/Ll1w7eDTWcs9/R0
dg1PfPYscv/SIUZTlnkucuZtvHxHoLFsPzJghVmxM9xNLS08v/N2Wr70Vtbz
G75+1sZm3qt8eAvnxz2jEWj9jcPDuqq9F75s3wrtKTSeeSMKoAkwwY241Vam
pjPG+S138jkQlZ2RuGf8WCMXe39/Hm97eA7N9Hh9lredJvfCAwAAAADQwggK
f7Hu+u0pFRL84kdY9l16g9hLUqiwxi3H6/S1jgE5FXg8JEf9DI31Nw59rWf5
a37BCadpaZKzv/FFZPlkOCqBhyO2c2vDh85geUFu7RrhcQl9bP3+MS/arKPW
9o95AgAAAIBPGvT940XjDNarcNzY++K7Xh7SJJPvFda45Xibk1pY1VBXenmU
1hjFcEFlYLl31nIN5/jabKKclYndPm7fSfbEHJWpOB3Wdap3Vhtdhy3N3j+w
a9g99Tfq4IEKXW0iExRnldsEaPzB3iauaWXKrwQAAAAA4IMDQwt2Lu8xx+8p
484XTJB+90bkL3vmBLt2JU7OWR/Jl3iNtGvccuARhsQZNJqgKMyrEYGaIqqK
L9sZBDVH7GWzg5UdDv48ILxxR3ZiGVfmDhjfLLGXzQ1aluD4uc+vz9pg0QEA
AAAAaKhPOzurE3uORLlMkZ9tSJVurZFf466vytntuUFyvDVB3ZV9ffWaetoO
//Dqjt84JRfm/jT4M88LTxrteGBPE30sp6WVtjXPJe9eiOWEhDeNXgTHivf7
D95xht88cafNBsY/sWHwOhXm2wEAAAAA+BiRX+Mms5rz5mdUUC7x43EoZ9A0
jsr4I5O4Zp4uZgtOXmviPh300bVpvFXPK5Rf+aHAzzvh4nzt76ZlBsDQgghf
uxMqhON+MKCppxxW71UjxSsAAAAAAB899eXXFy2SuprVRXEWjQnUBAAAAAAA
AAB5CtPmbIiuwNM2djTYFP3vo+MTuw+L+xs8TQAAAAAAAKBpYGhOyNSjzyob
sKqnAc6G3y6cNNw26klb3I4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBHQmlk6DcmbtaddREE
0TXvOdHRNDSpuCEnaZ2548Se5vhfDTpbTzH5JiyytK61y9oU0NLLo/QQnA7b
7le3dmk0xLvMiN5EnbgmsX+3dmFaEVTweLWP0bj5S4YYrbiZg7V2cSTUXdk/
UotoIK+QwtrWLk3TQJ/c2vN77ocjWwBQGUxw5eRiExNPz7FG6w4XN1NPBGvc
1sAKnhy3N7JeuNTU1CHhTb0K36jPmG9FtDEy61xms5dP2dPb4vhSGDKLRnrp
Z907tKVaKKUqelOfj8nVxMHyg6Z94satdO+Kjja8lMLcIwN1Ed78jIrWLhCV
yvyYQW2/E1W+jhvZT8s//C3b+yZWsHlRPy0dz4tPPk6PFBeCEWI+LO5vVUYl
QEWaXW2w7Jv+n+uF3vk3x8+Z06nb3ky0eZ7TANZYApZ+cUFnxMgvrEAVYbdK
z6opjbfvOCgs+t9HUY7tEav911ScS8PSTrm0bxVXk+7pjR1f1GsgzfGJuJq1
sTu4LeBqYtXJbkPP5DfDnQtTFo+Rbw687T5l41aeHz2YY7gpuqpW8Hgtjxd9
TfBBTb9Xvz5j1uY7Uenelf05SmvRVl3NquiVQ8+oMHCAqylHIwwdzVeaW22w
vKDpnJFOyWWY4MpR3pJVj//V0HPAGotR7EFNdzVV7ZWNBUs95dqh/ca7VVjB
kyNuvKOPi2nUglbDCb+otVxN+ac3dnwBV5MGfDXfRJ7FQU+r1L5TC7mabzP3
GDeLtUF/3dtjDhg3WUruh+kj3B2xH6gr1/ZdTezlnVWD7MfoIIi1a9r71i6N
xsHQjAU9nM+20sDRpmmEoWs228hMbZortzlUF6yxiOboQc3fK1VyBmjV9aNw
NVuLD9rV1Bwt4Wq+L77r5aGjo3lrg2bd2z3ESLE5PkXjRgVczWalvuLB/CHb
UjKOGCOIlVNyWWuXR7NgaNGJ/e6dWm/gaLs0wtA1m21kpVlcTbDGIpqjB7VI
r1TuDDCpK7iaTUBVV1OoA2eOeRtzZ69a42/B5foTixGScGhrl6uJRxeYTf5a
p4vP+QcoxnC9amCFT0/PC/CzsDGYM/PGK9EMJlbw5Kij+fzYO6jw56e3Qvrp
jFi7t5BlBlhQeMvXh2tl4b86aN4om03LvHpRtUtJdVxvZ8YHW1svDVwzr2/3
2VFXKSuzmOBG3Nqv+0/1917iuMDE1uaH5Ey8vi/vbBk+xV6fi+h2sHDGJ1+l
26neF6cGLsFLErxq5gDuklOidV68Rm7j/MKDInbuXz1hqXNPU1ozxY/ebjNw
8ggdBDHSt58svLFpaFK+tO24JtG3GIqqYhOw1Lq88KqH5bTlawNGjOzu5Uf9
Opr1++ExXO5sd99Js7mjbaIyxGsQqODxqnlm070D7Zx7THW7KW4+1WSrCIO0
8U1tG2wHjB+kTe5oY9y8phldkpCTFDoEfyi+Y25ZUMKpzY7EBjqutdHGW2/r
Ek58252LIByzaS43S8SmYOHKO7FrLL8VCmrh//U0j6Qu1tAphiTem7vlwv3v
lrpwrbSsLM+9rGK6XiSlK9Gzh1v6BwZONOy/6eYTVPIMYXOsWzzOf3FE5LHd
7n4LTfVdVZ4uQON/HLIpmk/WgnUMfRu+TE8mYF5YnuMLJrhsO3TwwLLQBaNc
9Rcw20MmhVGkMYrKIJla/u05k8b2G92XI2w7rp2diQnPNaGYQfjPi0T7Ckkh
oO9uznDFezqC6A43js6ua8i5FdxdtLly9olERTVkaVPafiSN+Z/m8sNyO0vP
wEC7yd3trH9IIZRffavLaGpoNYq9q7IYOqamZPiKgto0MPb3RlgPfEWM2PRK
bG4l21eF+yuIVJZmt8YSOVw/G2jUfXLAmsXDTBedpPR0enso2TbSYVtyHk1f
UEWAjOYFb9k/N6z86kuTZcE+/xtqG/WkGKun70ENWdd8dCnbVXKSQswIcQmb
3p24oOxZlLnYZt7MkelZtL3ytbS7EWYWl3bp4Q0WOrgRHrONYc+ysMBbQ3km
5j7Bq3xHmZgs8blVQGgj3nmdiV3PHLMJA83Npc0nhUXDSWcv5q7aw6IaTcx8
E1ZXU0V3Qr6BGjkuNwbVXE2Mf2KbZaf+R7Ir8d/wqNrPdZaTa/1EOHSvzv0D
Q169vOGnhxit2ldax3K9MmreJbgOj8xGiY08yFd7Loj8spA5QgkN2RFbjTUU
h3nh0jI2O1/AcJOq4ps8U73gcFK/hIr3YK6TrtTVZKtOrh8PMfrSdm0oObzX
xO0e3k4aT44mnZzypfmZF2Kn5eXdEMPu65PzMYkw5QZllH93ho32XL8cYscK
ln3DvxsRm4TVpM/sHnz7regy9tUlhvcX/HG67QcF0BZVrSagrXXnCbPGnyJr
WvLHzp6U8Om8e1t6a0+PTiFvhu/NMRYF25Tu9Rmw+zyupRiaEzBd221+hoD9
KWyx+uzSVj6rqRFdkqO+IsXZFJno8ZCYKsEeX1z4mfaKm6/JD+uu/NBz5T7R
Dhqy1fp08fmFdAOELW4p3bvEpBgNonhvvSFdl8f9XRSxop+WTuCN/IY6xuux
7Otzh89MJywemnDcubNhxB+iKciauPDuayPLSXmptTLFzztmZ/dbESaaGjIw
OJTFGqxJDVkvebR10LjEUtFHtKuNElgVhuY5aikqi2RwaOcoaIWvuOmjJHu/
iZaWZxBeDAx94tnHMZLVONPctoClH4li/o2MIh6RAw3GP75xaIceYWlvyF/V
sLo1DKaGRQOVdVXaGTz2pqT9itxOB9b+rrb1UJzVZL8/nUjp7trs1rgBTT07
V6/L6iSiYEIj5mSw/HqesvI3YLejHNtp28+cRG+02QXIogwY+jJkoc7o8QmE
JmI5twKMbX4jtZK5B0nlg5udsYip+fkCsduVl7R0iMdDvqhU8j2L7p7Y/bMz
O3Kmn3ogukV9eQKv3877DI6cUP2CZuj5hLwUy4l/fENXG15yiehyVZY46eeo
ibL1sbaMVXNYVISpidluwuJqquVOyO8nakTPagykqyl6iRAxlnyzkBZG8OLI
QM5/gveVicVWFb1RX1s0+hB3aLcGryYmeHT9uQBjv56d+qQjJhujK+qJcRnR
mnMug3hpK0906IUg4jFdUHhjhouOiXX8P/Q34R9eY9hO5nEy2qW0Orq62+6L
zRO1fSsLTw/T6hEiHrtxiGYa75pWJhamrH7WJ0U5tpe6Ig1YVQqvD+LqnfVe
qCdaboeviIen2nTP0b8UMgiFzbgxFFXNJqC9FemMKRSg/rmfM8eMIvzCu+u7
IfY/JdbXEXmlxDHehBum5XstT6UCK6JM2kpdTY3okiLlURv7a3fd9agc/yX3
ZkBnxEAs56Kto/xTxD4WKbSxrml8SvXF6sGoGFXiL1oQ3hoqeHY7XagkLNe/
DV/WiSMeF6qL4iy0JBvGC0M8tNwXPC4TSbDu/KbRcTkqVBErCh8z5tIz4mt1
Dz2+Up4ojNqU6WendZH4SEK79zB4clgx/eSDEoVRRB1FZZOMfJkl0Am/ga5r
C31Xl446C889K088brV6XzG7Yaa5LXM/UqgIDt4dOnE8/J5Xi8ujotV9UkBr
atg0UFlXpXunVqHvM4zdalhX1a0HUVMZV1OV+8uJlJbmtsZkzgffsCJytorY
xKEXEP62Spk9ZO0L7CVkUQaiAFpeImuAFWxe/F+OuGVZehDlucQ2HLH5xT2Z
LSNOPJBUQl4x6O8p7LxS5W8ovLfcKeQVQ48j/FKyHcW8f3HEGLHYGVtBPLWJ
rqbaw6Li3ZmamN0msLia1U1yJ9TvWY1BlVlN4nUJmXY6HZO5gON1KUd0hz5G
MS8pHYD1enawV09uF6Hk+4L0VYic5jUyjc0T37LwTsDXIqsoD+lLyEaXUbVL
eXUYNB97cM5DR15WtbHb+3JEzaSgn4QpkBUOfg0+h0b2WXzRzW256/YTPz3j
M8+1sxg3pqKq2QRK+ju1AES3ReYG5Ut6OvGp7tKw4lr8dbKLk5vo/VHBFVTJ
qkhkp0zaSl1NDegSLa9SQ/QRy4gLNVhD2T5fMy5P639Oyf8K5VB81sk55V8Z
scj3aFH1WRRD/EWqhFmvR5NOuHU33JxCTm7IDK+kEcPXEGdZB0WEXMspYVYy
ityyf7OzCxLPCZAmQlnnlfEZiF2lCMfMcei89d6RCamM032YEoVRRA1FbWCT
DM13qXeQET7dcxvEsz06Xwz1mJz8jzK5Kt6WpR/V0Xb5+ixve6RX76PP6xvU
s7pFdKaGVQOVyZlWGur1fYXbqm1d1XQ1Vbq/rEDoaWZrTDhmnDlnRbvysdzU
TUZdZpy6U/OnMnuoLJaPuYRs4xS+i/+/EmuJlR4PG9l9UMyzSponMsmHfEua
F5RXg68KJc8YcSavXuZBKjQr//CavuIX/PIo/1HnnzG0E75oxekrp2mEJojf
+pvoaqo9LCpYP6YmRqtYb8LWvk1yJ9TvWY1BFVeTaBrE+jvvyMgQCqFXn5fR
lFPZ9apQE7fHQks6WUSus0jeuPG/3P5paDg+1tNASlI2GpyqXepVhyJ28osK
nV36RwVRkIuP+n77Q2TYH/nsPT65kbl952IjczJ0QneidIafvkbqGDd1m0CN
EZwYRBB764gYmTrtjE+tJKLF3lz45Xueh5GR6cKlS+w7NN7VVCptFbcFNUmX
aJGsofP58ZPt4h9cWqD72YbUcuzxL6NCoysk92Hr0ayKQdPcrNcLVSk7/ZT3
qm+NueMWrVnYU4+i/Hhw10brKXh8qZBelPADJlB+stvQnvaSNQ7RgQ4yA6Ui
sk2JFWbFzvGf2IVUbY7NtijGYyBYFUYRtVxNVsmoPFDSPpfkbWZEX0RPvOzI
huJt2fsRXTEIWy0yYupZ3TpFU4Oya5TarmaDmn1f4bZqW1c1XU31rTcDzWyN
iRBWGkdIuT1svKvJbF7KiMlqpq1VKvegojAvrW4Gh7LqG/5KdHAXzeYplZsM
xAs+PjOJll6cPCHxrfznEpHgdZFvR5k/Nouryd6dZWFqYiU3YW/fJrgTH46r
SfNSJncH2UZhv14FiJcsROr2l+37zgBB+myOrhLdEctbNTToTin9t8lZTWZX
U73qKLycysmKiAMUTddTp62Kr5549p7mbVFcIMHvu358Seoa+v6vI0cX99Ca
dvoBvcSoulFVnPCLSHvVe49mpUmzmhJQwWNfD50Bpnvu5uDRiU2c1VQmbdVc
zabpEgPlkWt7aHXbm5g00ymsqApfmTXZciN309dzrr+WXqTmrCbLF1mvxwQX
I2d01vE4eKaIeJGiDq+CixvjXopCpgS/Jx0c9T+tucTcAjOVF3cN33W+gvIc
cjhTImdqU766t/FKOjltgRXn3fBdYqbbP+YFXcySMoVRRB1Xk00yct/FclJO
5JQp3IH5uUTlSo+sGBmw00uP43jgquKAIoPibVn6EX0xFGY1VbS69KbmZQ6L
BqrhapKGTq2+L/5KQ6OtK02R6JCd1VT3/kw0szUmosdp/BDl9lCjs5oiakri
Ruiq4moq6UFEoJFlRFrJXju7315T78EmN8k9G8Sx7lbjEh7KvtHLQ9RFfsqd
iAewEAWQq+lq0qurfE3Zu7MsTE2s5CYsT2+0OyFfWboHaQiVtgUphJrgE7a7
3WOei4Mb5VqW9XoVIEwEpS3kC1maHWE3M505hQX/8Jov24tssuiOrLGabNVR
CLn5QjFaxmoc+ZIlM23lYXYmXyEGRkhlwTmf0Oflr88Mp8bqYPlBLh22MQyy
Mm9P9/zHidpFaVFVbwJ1RnCFeBLhrR9dcD+dWoevC1CiU8TDTfVNUYigeiqt
TNqquZpN1SV6CMtp5dCbDGHC39lHDLEbYisT8MnaoxkVo5reVjNez8+PHqxL
maQVD69FD4MnH70XzDM4JA0WwtJO2n7JmvvlXe5BuwmJsq/D5DywgYwuKSAT
qxlrYkIJSMCj0OkNO6ZMYRRRQ1HLWSQjvyBVGxtiRmaNVtnVxDLjJ8wNeVmF
Fe1c1qOD4c4HLLtN6V1Hpn5EH6tJHFggE6upotV9+orW1NRkMGugGq6myNAp
bUrFr8jfVg3rSlMkOmRfLtS9PxPNbI3J1VXpFhgh9ZVZv1wsVmoPG+9qspgj
YgG9r+yr4j/PTtwjTqpVvQeRK0FjRzmPooQYKSuV9J7kPW78ZKetbT/JZPvD
ckW5SS/D60ITq2m8PpJPVEJNV5NBXeVrytqdZWFsYpT1Juyxmo1zJ+QrS1dN
DaHiDnTBz7vHdJaG+qPplxwcgshlI9r3fcbr6ysfzBrDGSoO9mCAf3htf472
smvEWxbKT5lqISzk2APXiJ28tXkbbH0TWdcB+fmnLXSGhEXzyWU7QeFl++EI
0n7jXYHa1ZEROya4eNhVn/rFq37dOy69lEGmxSiP2vBffDtSnTRsD9/8PlHb
Q7w1A6stCF9kFXMHRfHmttgmLmF9Rdq3X3x36w19dch+SgZpU1ZplRSVuY6K
qLUuib16tIOrLQ1CFhRemGp1PAcl+jjCi0oln1gZt298R47hptiyqBUjGuFq
KpO2igvo6unS60c7+3D+u5hRUCJq+b/ZGUjiP4lNEArOGHuPZlIMui+yXV/1
Aj+U090vlzScbx7t7t8XPyElL2X+BKGrOQux56W8FdWv4vSWL9aJ7C0N6PvH
iyz7Hk2V71mqZNmV3Rb0bUe90DtvRPcpvBc6aBztgpdShVFEDUUVsEiGcDWJ
JTnSO5Lu51LN1cQKnvw4rM8PGZINxf05PLe0UvXCrRn6UaX0eiPxnmUMLdgZ
2KWL6U9/ltHLgbiIvsvzGUxNHbMGKpOzoqFT2pQ0tlH+tkr6e1NdTXXvz0Rz
W2O8pztypN0WE5zfZbX7fAWmzB42wdVkMUeElnK+2SrWH1Twx1Krzfff4T+r
04MqTu8YoYWYbpGfkJQvFe09SWTfthjBJ9hnfDZdUhei7wywjMsTv3Oq4Gqq
oK4qDot0fg5jE7PeRMm2IJXdiRZ3NUsjQ78xITKPIWRyQtPQpGIiHZkoOovM
SCZOKoUJrv8cZGrI8/Ne4jjdgkwLVpZ9zIbIQEVmqZI5x4fu+gbxRkWEYWeW
BDwv1oZvB5vOWO7p6ewanvjsWeT+pUOMpizzXOTM23j5jtKkT1hh1s9uvN6T
7f39vV3teIdCV/QhYhiIfV7KqkMk1HKNycwM8iA34+PyWU7WDhPcOB9i1ttp
uQ+R9kqc7I6kqvi2h1OXsRZ+njarfxMn8RPWZeOaUX1Nl65Z6WNjsegEkUGr
+vXp0aZbf1g7zN7eP3C130hT92NsyVKwrDubBnYZ7bWAZz/t6t+oqkWlbQI5
mG+F5yVYEpR5L8bVhMiNJtQH16+js4mcUIXZJ3k2hrh4/aZYjT9O5v4Sdup9
m22/NArYu3evl4/NpmPpezaad9K3cndLzlelwDT1ZpK2JK8mkeCOLj1a43SJ
TDumLLdPA+7BBncNCC8mr6ouvmzTNZjStesSxEITFm/K19EPn1J7imsMkX2R
TjGkXyR6n+hKSUUUFUn450fXQ026jw9eHLFr18Jx067+nhhiqDNioumG5NKC
UOF/B9dYmnsH+/pOcjf19KPXgVrBA9/FDmSuSHPDlVfFBwXWlCbP85BaA1fz
8N+LFb5c95SiMOO2RZY+P2Nus3yPyyhzTxcPl5VuQy0P0x791sCqMIqBRmor
ah2zZET5bYqObHPQ77lw5UybTfsKqhmEL/Nc09Bfk49bE9cgnGGhh0vxJjvp
0kVsRek0maVN6ftRg3g4mOayA8/g912gHc+Q53TyT+JTda0ui6mh1ShVbIui
oVPalPJfUVAb0izT9neVzJ0skryaxFekoxj7/WlESqe2zWeNG0Tt8njNiv/1
Nlq0yn+Zg82E8MMF1eL2pbeHMsKk6QsP/1ReQgbz0kC8WB13sOk5frTvyhUz
bW23J0oy9zL3IKHdm0XmMhXzT+aeAV/88JgyISnXs0Q2XP6eVMEXhIwdEMOw
LiwrwD+3bprEFdaFyGK6VDGvJiGoabIlpMKqruoNi+o1Me1N5J/+5J7s+JL5
t4ruhHwD5TVuXG4boNnpvywP7Mc0uwsArQiGvrn466Fx/TY19xmmAMBCWzsK
BACanfqKZPdRvxQo9zQBgKT+xu4J51XJ7wcALU99VuCEc0xJyQCgBQBXEwAa
yNnyNSPJ6c2nl+2CmeN/AECO+oq7XhMuFcK7CfBBUvj70hnilXEAaBXA1QSA
BjLirhPH0TWtFH3qN2pvJtsWDwCgIjgZ4vAzzfGyAND61AruejmcetGWI1SA
Nk5dQsx0YyIOmRIGBgCfJpXXj/O+tgmcTdn+AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtDHlYjBBr1qOiFWE8Zanp1GfMtyLK
pPljSZsL8ZlQiLLzv5r6nCe39vye23K7Et9lRvQmqqXKAXYfEXVX9o/UIire
kul3WkqLAI2CCa6cXGxi4uk51mjd4VZNGtZ0y4kJEi5vH+PUU1fffrKdHbfn
qBX4KT+19+NGehFnm6oG9WA+/LQXOxOCseSxLBpV7zY4WHxMfKoDBEAHVrB5
UT8tHc+LTxgOy6tK4fVR29UkUeW06EaBpZ1yac9sPSpfx400QsyHxf39AeW3
rYre1KdZnQS81v20/MmTRplQ1txqg+UHTfsULUllfsygVsj0KK9F9ZUPZo3h
fNHj+wfvWrQcHw3NbCuw7Jv+n+uF3vk3x8+Z06nb3sxWztSkxHKyICi8MWNK
R3Oz8Oup4jP+MMHFH4fZB/oYckb+eE3diQT8pGkFDxB9emdzPy3PS5o80KTx
Vf4kwdIvLuiMGPmFFWhGVT/VAQKQR6nvUZvmym1NVxOrTnYbekbuTG/izi3n
atKWQU1qY3dwm9PVLN27sj9HqbQ17moSQ8bHbkmqolcOPSOrbK2UVFxei8DV
pEX1Dtu8riaWFzSdM9IpuQwTXDnKW8J60nfLwG45mRAUXnO01ho3Pv5v2RS7
GJqxYCyCtFtz+626BaF1NYUUhU0ZEJPeSDE1YrAAZNG0q/nBDxCFKYvHwNkQ
HwKt7Wq+zdxjrKCoLWw9aMugJs3qamIv76waZD9GR/1QhybzoVuSpoOPpz2c
z36QriZAiyY6rCZogvFsJhphOWveJbvYcP7b/0g2zdk0dVd+HPyZaWye2r4h
k6uJpcWYbo1tZK/6EAYLQJYPfIBAf93bYw64mpgg/Vbs3XSBZqIcG0eruprv
i+96eejotKr1YCqDmjSjk1Bf8WD+kG0pGUeMEcTKKblM809g4QO3JE0FQ4tO
7HfvpKBs4Gp+sGiow2qCRhjPZrb5altOrPTgOnMtDu+nBPqzadJ/Ht1/fkaF
2gWRdzX/eXbiHhFnXpji7MweBcTAhzBYAAp8yAMEmnVv9xCjVjjxFhU8XjXP
bLp3oJ1zj6luN1+JFwsk0a3Wrrcz44OtrZcGrpnXt/vsqKtsBgEV/Lk1lGdi
7hO8yneUickSn1sF+A0lewq4Wy7c/26pC9dKy8ry3EviWYLCW54zek+29587
m2tnH7jAdmX493P0Oq6+9YYIL4+ePdzSPzBwomH/TTclh1JJIp87bEvOu+ph
OW352oARI7t7+VEWazDBjbi1X/ef6u+9xHGBia3ND8mZ5Nffhi/TU4iaRjNS
frDlcmc7+cz2tFywfd2QXhpxNaUV337l5b41lt+6+05a+H89zSMfF9O/Er+8
s2X4FHt9LqLbwcIZDxyX7i0irUfMXZr6SnZPSNRb2KzrFo/zXxwReWy3u99C
U33Xs7RmRyjh4wsmuGw7dPDAstAFo1z1F4QUvqEtg3y0Of0+EWFr+vpwrSz8
VwfNG2WzaZlXL7GTUBq5aSIZA2+k77CdqFTOrbWGXAThmE1zuVminpjR+B+H
bIrmk84Pa6dWaG66KjN1OqE+b1j51Zcmy4J9/jfUNuqJqNVISxJ9i6lfMOoe
VvDkqNs4v/CgiJ37V09Y6tzTVFRyoXd35pi3MXf2qjX+FlyuP7Hs2Ng+SN+j
WZ5OpZZ/e84kcreCaP8CzzWhmPiIlPbClXdiGTT5fXFq4BK89YNXzRzAXXLq
GmM5mQuJw6xF9Lse2O/G0Ii0pVWtw2KC62cDjbpPDlizeJjpopP4F9VVb+YH
8dFHzHpFaw/pjYbUSG6NTz80fvb4blrmKza/LJe1Fei7mzNc8e8iiO5w4+js
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
JOchaKFk4x9YU5KHOOO0SiIa+SZWpzlaWZItrjnNRivrwMdH1jUfXUKebEd/
As1DszgJJK3R5enONyyVnF734bsubRgsP2iaBrUIy77p/7le6J1/c/ycOZ1E
Rzd+aJTuXdHRhpdSmIufsMybn1HR2gVqRuTat7HNXZkfPbjjktgU0WllZFo/
ym0FN095dTeKIc7jJZKNt5D1+BCbsjI/ZlAruhnyTaxic3wIkmxJzWleNKsD
la/jRhoh5sPi/qY5w/aTAKtK4fUBV1NdsPSLCzojRn5NTNmtYSdB5tat0uWJ
k9fkumebcF1amcKUxWNUs2l0V+KH3WtMi7C8oOmckU7JZcIXhKO8JavoTyGX
Xl6d7Db0TL5GHq0y5UKviWO4KbqqVvB4LY8XzXBo9ceCXPs2srlL7oUOck2T
HHks72riTfm7W7ew+0R2xRY7QvEDaMqq6JVDz8jWtLXTa8s3sSrNoa4kVbc5
avFhHL5J06bqolkdUN/V1EAVNE6TrH1tmisXXE110ZCrqVknQZZW6fI0rqaa
rssnCfrr3h5zVLJptFdqVIvUNAhvM/cYt/hxnCX3w/QR7o5P5eRxTbma/uMo
mqPoauJ3Ngu517KuZqs3JYZmLOjhfLbtu5pqSlJ1m6MeH4KrSdum6tK6OqCR
KmicJll7cDVbk0/A1QQFUwKadW/3ECNVbBrTla3mar4vvuvloaMDrmbzohlX
M+vy6FDKIc50rmZVtN/oy3n4T5+Iq4mhRSf2u3dSqOnH7mqqbnPUptVdTaY2
VZdW1AFNVUGzNNXagyfQmoCrqT6SSNQOW+PTD42fPb6blvmKzfgJUMIeeuaY
tzF39qo1/hZcrj85gyqNXJ265cBGG0vP79YvNe0+0s/nVgF+apQkApy75cL9
75a6cK20rCzPkQdKvS9ODVzCtbLwD141cwB3ySlyTQoTXDm+YILLtkMHDywL
XTDKVX+BuL5010vvv/3Ky31rLL9195208P96mpNH1PGjt9sMnDxCB0GM9O0n
m5iYmIYm0a9PsFxJalH0rfhga+ulgWvm9e0+O+qqdPmMXix04AG3btaddclo
WxOea0Ixsddg1Tyz6d6Bds49prrdfCU+auvlnS3Dp9jrcxHdDhbOwvJQonPV
lRsNmOBG3Nqv+0/1917iuMDE1uaH5Ezy/MfSyA22xJYWYnsLNSRY7gZ0tc5J
CjEjZCgssztRu7JnUeZ4gDHX2mjjrfyGarqSS8KqrV2uJh5dYDb5a50uPmcf
XP3WFa++5LvCsh3eYKGDxyqP2cZQqgZcnn9uWPnVlybLgn3+N9Q26on4pEJ6
oUnbt6mu5j/PTtzLlTY8nauJ5aScyCnDfyKtR8zdqx6W05avDRgxsruXH1Vt
0KzfD4/hcmcLlXk2d7RNVIawFup2TPqmxAqzfp42tb/rOD+/oHmDTRYfjia6
KVs/pSuMCtTyb8+ZNLbf6L4cYQty7ezECi8RzsKVd2LlO2yDssaiAxNcPxto
1H1ywJrFw0wXnRRfzNwx1XU16SVZ8OToeDMXf6G56zF+x2HJuZMsloRekkIL
sG7xOP/FEZHHdrv7LTTVd2WZbVOmOfSlalzHVISlTZlNCj2kDkxz+WG5naWn
DyEQ6x9SZL6iquKhpZdH6dFs7rN2vZ2pYLRZqkCrMLTW6fyL9Hlsox7Dt4gz
dmmfora1J+qdkfKDrVA+Tj6zPS0XbF83pJdST4BJadVTQqYxiwap1dqWnKeg
tPLbXuT3i7E0ZXmhBoznC/F2KqpPxTSC4CNs9Ozhlv6BgRMN+2+6+YSqq+yj
RmnkpomEygltgsN2vGXrEk66dNEV90e2O1OtE6N8KI9upLmWQ87VpHVdNAER
iar1lf3o07nF8WOMEAvr+GKMf2KbZaf+R7Ir8StqSuPtP9dZLopwICNX9TwW
PC4jqoXyU6Z+w+G5pZUSvxIR4HpDui6P+7soYkU/LZ3AG/kNdfy7M2y05/rl
ENH1WPYN/246nhefYIJHWweNSywVlUS6DoUyXC/85f2LI8aIwVij4DiyL9ek
z7SUxu2r/vrMcCWuRbrtBwWITlytids9vJ0kJpZNLHTIvxqU7vUZsPs8bj0w
NCdgurbb/AyB7KPlFJhJDkxyowNNOjnlS/MzL0QmAnt5N8Sw+/rkfJFOKp/A
Ya41vjI1FjE1P18gVvC8pKVDPB7yWVuQDKvu1bl/YMirlzf89BCjVfvw0fz+
2ZkdOdNPPRDdq748gddv533mvoOhL0MW6owen0BcguXcCjC2+U34M9ujNeRq
ykHnakohOnIfa8tYsglK/tjZE7Haf000huTd29Jbe3p0CqlE+G4UY1EQmrod
U74p3+VGD9ebe1Z8rDzeT7sO3BIlGtRo+mkBS2FUgtaLI4XTp4vPL3QdlrWx
FEFTz87V67I6idDemncJTgbLr+exd0wNzGoKbzhpwA5SFd/lHhmkPfHQ1Uq5
OW05S0IvSawmLrz72shy8rtKF3bZNYelVI3smIxlkBOXEpOiCCkiI6OIR6Lu
jCYcn9ypR1jaG4xNXEyKJ7+5L9ePhxh9abuW1mjTVoFFYRisE/uoR/8tddSy
ga1psKdJQYZ6/ldEbgn26tEOrq4SV5NZPdRSQvYxi6Ztbkc5ttO2nznpFJ3S
ym97kd8vRtuUnSfMGk97NzWNp8LjmEYQXPjX5w6fmU74tEJdde5sGPFHmaSO
ykeNt5kRfRG9ZWFFYptQHvndl+EXhPJnv7O8rirIR0bzm2iuZR/aEgvoxIN6
heC6hxU/v/6iBKt8cWQg5z/B+8rEpa6K3qivbXAoq1ZyPbXnkk6C8/E7+OWk
VbEgHCFU8Ox2ulBL65OiHNtrr7j5WvwFYgOdq3dW1tlpXaT2p+Htw+DJYcUs
11eJ7z9WuilDpt0142rqbrsvFjG1sgJWsdAg217k+7g4mh17fHHhZ1q+1/Jk
Hi2rwOrKjYbKwtPDtHqEiA0LcRe8O493TSMVXKmryVprLPWUawetOecyyNvX
xG0ZcQL3FdlakKwp0m7N7bf4y+Oj688FxLeri+IsOnE8/J7/P/a+Pa6m7P3/
nPMKeQm/+NRHLrk0Gfpm+NTQlBrlUkKdXCqUe6QiCiNkmhS5TWgYM8qtXBvk
NmJQKGkQI0YkIxRlZOqgONXud/baZ5+zzzl7r7336USN9f6L097r8qznedZ7
rfWsZxOr7+Kr890jnjLHb4MYb5H/ifuE9y1aGfCZUCbPv9mr/hhUs++65HcY
5WG54tU+CPEQWjme+Zt8uPjKd+0FztvTa+v4G6bKUGJPI6aKbJTrkTowC4xs
Ybj66itlM1TsFNoYLoBQTQaDhQ+WOvD7ID1EwXIHTgT5Gy6IffkGJhYdUE2Q
XkZxm6Akxl9kaXuyRLWDKp6ESZJ3n0T4inxIulJXV3M0elBKPmMzYJrD0irt
DJOpDSriYnUpmtAUUXXFb0P+Sxo7b8WjsWImp03bBahPo/dO8FmP9i3WWjh6
+zeS9BG9VMeIAxNgVo9i7krINmfRAK60amLUUAzaodSN89SojmEGwXv3MnZe
ayG5BMMnJpEoNPYlw9EYHcC1mp59kh+DsZetr/1sEgtqWUvmJB8ydVt93bUC
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
WYemGbZdduExLsj3r9LcTbRzyNIL+8Z0sj74kJx4Hl2JMDX+LuMxpqi0S5ue
CyOePjoXYigwX7qlrEaav8Bb9LV7xj918gBdJ9mSU/r06I7b5Rjc07LICt5y
NflUlZ4XWxouiZUTK6nk+jR3A9Ln8/LSKpBJ0rN/wj0puGQk+N+mY6ByrChi
qoyH9V2X/A6rK43xx2lvL8KJ0QGTPoqYqT9IJhawisy/uKCX02/g32Wbgz4n
JmLZjL9gvJ7XjFwJ+Rat8iu4DS3AzGXo63ernBguUOYor+wyec/5KHbdm8So
nnrtNtwEC/93JSm2ovZLtpQTc86rOxv6ybvAoBXQ2Y0CGqYBoW2szEcngFDN
YZ7ZFTQtr72Q6NZcb9H5Z/K/EfdJPQPzqsgXiclRKrl/Cd/thz2vgZex81oL
SQmAgRCFxr5U3VfsEoGrN1b64OzDF1jlwx29hf9VDBZ+9yTKSM9kWx4NQ8Ku
HZrUUnW2Aopnuz75LUZ208BgzTXSj6sJR0NWODPs1G3XfVBXbWX2NIcDj2Fh
YjQKUPs208NSMNL3BqizfMs3JgJSVu9KD7l7ZAJX8zRiqshGhXLI/MnIFoar
r76iqwcrWjlLv5v10SLQKyLWva/tyZLaByEeQisFlZU16Mp37QXO29NrNXun
BdUEi2JFSDkuHEtZpeTTNJrG1J67TyJ8RT6kactWo0ejB6XkMzVDXapMHZFK
i+KCB8crFmtQaWgCNr0y6IyEs3K+ebzT2ev3CiA0EemI3r9IsREKZ0fQeC0m
avQ0Y5J7TIkU+E9Sqerevzw5qNXq+p15wQ0TJoRqSfqIXqr2Dj8FxgqXWn33
+zvs1vGZrZSrMNnUI/zMMrmQ8y2Y2rcZPg5HijDgNkmR4h2Z22p1svoA8KCa
WhkXlGoW89B2DdHRuFw2d0Hr3iF+TxMNagsa8lEURZAQSAMozRN5xZ8iLb06
Z9agI8X0L6pVpHFLqIcoOKYEPExcmTFcIFN7ng4Z35QQdYggWRl4HJ/ch3tm
l5OVCoiJCZPcPPtAgtVV3P/JTNlO4GkpcygHT8sgK266QdZbER9u2kxljKg+
n4/eqqD2wg6LqKS3tcBNCURTD+fiRdS+SXftIlB0U1J8buI4fQuKQakCDIfI
/8R9giwVrQz4TCgKPl1YVwN2p8m7XcCNgN/rKNJg4Db00DQHsCHgsfsyXgFP
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
t5wbvjjIyXb2XpBXU/EiSPsmf5IA3fO0kN48G2lhPHxJQNyGDTNdvFN/T48w
1bcZabki48XdMF8iN6OBdeeRHgOS7inmT0xy9pcwS1NxSOAct/G27Hk1o0eZ
yVqimiCr/J68myAbleeeO3eo1c1flxDgq8wMOSfsLjWr1vXkPhxj4apKL/m6
tx1mGzLLadlvipSh+M5P2qh2gafkKQSx26kzesgXvMpaivN+8RLjadZC8aRY
QQlsadxO7Qvp3dkpwD1oyhSnKTOUucuK7+0TO5ni5YSMsR++G0/9V6OQLdG7
21dVdeCeBlVR5tUEr3iDPJmS4lTv4cZilw3bt6/zcFr2a+65sbb6A0zF64hM
GuqaxtyeuuJI2ZD/HG5nHbgkOHiUj+Ushhx66qN2+zalIy5rEl7coHRksmfa
s1dpo53wbKiy50fL+lVDWzujTPMuR/duO8jfT+zsnfpEyqYzhJLwUU5J8emx
/Tr7us1x87aL3px7aH23blazfJzi/4RwMjq8uLfPyXRQUEiIi93EXbpJj8Zo
mKczdnIRwrmjEVZd3ecHBrn7Oi7e8b1dNxDdRbkZqgbZMnBzRFcLq0Xhcx0d
vVJzLq+16Dxxjt2E3Wn0kbRMqK28u3ym6TDHxaGz7GYv0NFnHHkZl6ZH/VNV
be4+5qjtirya4MWvYijqreFymdwFo3uHDR+dCBrOFlSKsoy88ELNO925Sum1
J513evfswCDL1T8s/9LZOXThspCBlj7AClT6LvMGhapt/nF/vEq94MxJKrkV
vujrruazl4bOc3UaERtPcVw8HbLcBIJAzlXHHzJBXk1FZ4kExQFKgb89tNGx
mYACoZWv5+kn4M+MnvZseii7rDjpxmR56mPKw4GeQ8TbIhcRpmu44MDNcAa9
JTOUMmbzIIDPxSsmfGE5cf6sWR6esen37ydsndvXfMy8WbM9xFEnL7M6Lhlt
3u3q1Hn4oODFiyYNHrw2HUypeFbelYM7mS/YvHmzf5BT9K6cTVHWrY3sfbzS
ziexcxtN5CRbWk6/cCFxVnjY/pO/7Zsd5LQ88s9yqurycfIE/rq4sIfdr8/k
j5WuD2xHXV3Sa4XKNO2yRk59VS2R1B5apkFLwzhZLkKjwJvEUIej93UyhyEg
ICAgfOKQXtjr1t1u+7V8OUnApCXnL+wc4ijyqV+k8YeC9F7OkfkLe6zRCGlG
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
0GBMkJZqvis96Wgu+F+fPfcr1R5/e2ijYzPh0LijcnUC2a6EHr45xOYkHqw7
VNixw/fXifh55iEAKq2w/bqXN9d3xP9b+yJzhhsInNasCwKuN9Al16eN1PNV
WGV1Uexs+z2gbfR3J5mfJ9J8BcijtekBFrOEW1aGu8C9PaRGDagfnVcUJlm1
XHP9HXBWG4e2UYbcS3NOuLoyBZbXgY24eE8j6vOpIcYt557IlUqfcfXDxATd
keQktZU5M0Z1FTWPyirPmGCTwkY1ieu0fWPIinCr6S+ARsKwGBq0OgY/L8WF
46xcC789sKrjtwwrNaaRqoLOR+9lb7kJlVVgkqMb7DcCDedNNRmaSuP52YYG
rpP8h6ZOw7XyGywmwGdV3VkWS2u5UU0aVqDZU5U2w8xWs41MhISZw+iAasI4
m4xqYnSsg0nyeYcmtFS2X0YhIvvIg+h4eH6OkKnKlpWDO5kv2Lx5s3+QU/Su
nE1R1q2N7H28Mp4VHxhkufqH5V86O4cuXBYy0NJnVypT1Kj05tlIC+PhSwLi
NmyY6eKd+nt6hKm+zUjLFfRhNkq8P/FDx+EzclUVBiu+t0/sZIp/UztkjP3w
3cq8mvhH50N6d3YKcA+aMsVpyoxzirPVqtJLvu5th9mGzHJa9huZRQ3PABY9
ysxybjjIkTWXzKtZfm+XE3E3FqQdCwi7y8q7qiVpo9oFnpIzKOx26oweKpGN
NWl7PC3IlFaT5Zm+sLzL0b3bDvL3Ezt7pz6R1VFzN8xXmetvTtidq+RbJm0c
PQck3WNgZLJh2hxu/qVt6JIgp0l+l//IjOpjOiFscZCTXbiis6+fZz+seBox
TQ/fmIL2BXcXE9o6O64/tD33BR/GyeSOXpdmBU/vOVY2XksnfW6+8HCaIrtd
2Y4oh2YCuo+Sy0ThqbihTGQ+9NyTrqJfPPNqgmRilAxyXmLwWXY8jVhQAplX
M40i8DEaNaqi8sxOsanFvHkUjdIpZI0ZazlsGJljFs+EplBFPCeVk4GAJtcK
T6rJOAQyl+Vq0G3XfdLl4WsQT2NPZ1JX6eqiBZ7Eb7A9MQSEQXng+l+WEPmV
BcgIJyBSnpJJ3mRWGRXu0F1mlTIFtp29F+TVhIwL3fM4QKyUwAS6sKrDSnas
cTXqPHPxJKfoLUXvVO10zICkG3eprkBeL1ONaiCWAwb6oxcSeTWXzTa3olya
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
AAAAAAAAAAAAAAA3BihYThg=
    "], {{0, 197.25}, {666.75, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{666.75, 197.25},
  PlotRange->{{0, 666.75}, {0, 197.25}}]], "Output",
 CellChangeTimes->{3.875250816427726*^9, 3.8798273326928225`*^9, 
  3.8813937744363174`*^9, 3.8813946127307568`*^9, 3.8913212918726397`*^9, 
  3.891321332173678*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"55bfe487-9506-4c83-9ae5-93bbf5e14b09"]
}, Open  ]],

Cell["\<\
hence, if an embryo has only cells of one type, the denominator is zero. i.e. \
we need to exclude all embryos that have only cells of one type (positive or \
negative)\
\>", "Text",
 CellChangeTimes->{{3.8752498122174587`*^9, 3.8752498387936935`*^9}, {
  3.8752502651874447`*^9, 
  3.875250292970636*^9}},ExpressionUUID->"5d42194d-b346-49c6-a198-\
54742e1c7975"],

Cell[BoxData[
 RowBox[{
  RowBox[{"moranValues", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Stage\>\"", ",", "\"\<Embryo\>\"", ",", "\"\<Experiment\>\"", 
           ",", "\"\<N+-Moran\>\"", ",", "\"\<N-AvgShifted-Moran\>\"", ",", 
           "\"\<G6+-Moran\>\"", ",", "\"\<G6-AvgShifted-Moran\>\""}], "}"}], 
         ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"staging", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"valuesN", ",", "weights"}], "}"}], "=", 
              RowBox[{"prepareDataMoran", "[", 
               RowBox[{
                RowBox[{"nucleiFeatures", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"dcgGraphs", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "\"\<N+\>\""}], 
               "]"}]}], ";", 
             RowBox[{"If", " ", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"DeleteDuplicates", "[", "valuesN", "]"}], "]"}], 
                ">", "1"}], ",", 
               RowBox[{"calcMoranI", "[", 
                RowBox[{"valuesN", ",", "weights"}], "]"}], ",", 
               "\"\<only one cell type\>\""}], "]"}]}], ")"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"nucleiFeaturesICM", "=", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"nucleiFeatures", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\"\<TE/ICM\>\"", "/.", "#"}], ")"}], 
                  "\[NotEqual]", "\"\<TE\>\""}], "&"}]}], "]"}]}], ";", 
             RowBox[{"calcMoranI", "[", 
              RowBox[{
               RowBox[{
               "\"\<Nanog-AvgShifted\>\"", "/.", "nucleiFeaturesICM"}], ",", 
               "weights"}], "]"}]}], ")"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"valuesG6", ",", "weights"}], "}"}], "=", 
              RowBox[{"prepareDataMoran", "[", 
               RowBox[{
                RowBox[{"nucleiFeatures", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"dcgGraphs", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "\"\<G6+\>\""}],
                "]"}]}], ";", 
             RowBox[{"If", " ", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"DeleteDuplicates", "[", "valuesG6", "]"}], "]"}], 
                ">", "1"}], ",", 
               RowBox[{"calcMoranI", "[", 
                RowBox[{"valuesG6", ",", "weights"}], "]"}], ",", 
               "\"\<only one cell type\>\""}], "]"}]}], ")"}], ",", 
           RowBox[{"calcMoranI", "[", 
            RowBox[{
             RowBox[{"\"\<Gata6-AvgShifted\>\"", "/.", "nucleiFeaturesICM"}], 
             ",", "weights"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "nucleiFeatures", "]"}]}], "}"}]}], "]"}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.836371415162695*^9, 3.8363716709142075`*^9}, 
   3.8363717084503*^9, {3.836371740488264*^9, 3.836371864136408*^9}, {
   3.836374424359696*^9, 3.836374427376233*^9}, {3.8364455164697*^9, 
   3.83644551903097*^9}, {3.8503608275438547`*^9, 3.850360828935159*^9}, {
   3.850360878893014*^9, 3.850360893039835*^9}, {3.8752464008899093`*^9, 
   3.8752464497539525`*^9}, {3.875249956583127*^9, 3.8752499705615067`*^9}, {
   3.8752501087899237`*^9, 3.8752501439254155`*^9}, {3.875250199421839*^9, 
   3.875250241795162*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"efadbacb-3f34-4e43-acc4-dcc2b5e27e94"],

Cell["number of embryos discarded for NANOG", "Text",
 CellChangeTimes->{{3.8752503653749275`*^9, 
  3.8752503751129436`*^9}},ExpressionUUID->"3a4f032b-3b50-4a6c-8bf3-\
d1a78e1d3015"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"\"\<N+-Moran\>\"", "/.", "moranValues"}], ",", 
    "\"\<only one cell type\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8752503192623234`*^9, 3.875250361202029*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"b68dad6c-45b7-4821-8dec-055164ba1bf8"],

Cell[BoxData["63"], "Output",
 CellChangeTimes->{{3.875250323191625*^9, 3.875250361836582*^9}, 
   3.8752508339165473`*^9, 3.87982734719665*^9, 3.8813937894388084`*^9, 
   3.881394627850151*^9, 3.8854692040465856`*^9, 3.8913212919035597`*^9, 
   3.8913213468410435`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"8c2a90ba-80fa-486b-8c56-7a54be230f3e"]
}, Open  ]],

Cell["number of embryos discarded for GATA6", "Text",
 CellChangeTimes->{{3.8752503653749275`*^9, 
  3.875250383464203*^9}},ExpressionUUID->"754db852-d452-4a42-b1e4-\
fb61a1888351"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"\"\<G6+-Moran\>\"", "/.", "moranValues"}], ",", 
    "\"\<only one cell type\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8752503192623234`*^9, 3.875250361202029*^9}, {
  3.8752503929001207`*^9, 3.8752503937208242`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"7477789a-0603-4165-942c-171d6932c2d3"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.875250323191625*^9, 3.8752503950652847`*^9}, 
   3.8752508372546825`*^9, 3.879827347223981*^9, 3.881393789476709*^9, 
   3.8813946278601255`*^9, 3.8854692072049503`*^9, 3.891321291944452*^9, 
   3.891321346866255*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"7b3577e0-132d-4fc4-806b-9038944af640"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"\"\<G6+-Moran\>\"", "/.", "moranValues"}], ",", 
    RowBox[{"Except", "[", "\"\<only one cell type\>\"", "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8752504602092237`*^9, 3.8752504643709927`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"4aebb22f-2b63-4028-b7ad-667409ea20e5"],

Cell[BoxData["638"], "Output",
 CellChangeTimes->{3.875250465771741*^9, 3.875250838398808*^9, 
  3.8798273472505665`*^9, 3.881393789484687*^9, 3.8813946278890486`*^9, 
  3.8913212919873405`*^9, 3.8913213468931856`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"15261490-f229-4aa9-abd2-1da958ecb6cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"moranValuesByStage", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"moranValues", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<Stage\>\"", "/.", "#"}], ")"}], "\[Equal]", "i"}], 
        "&"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"3.5", ",", "4.0", ",", "4.5"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.836371867010998*^9, 3.8363719149625764`*^9}, {
  3.8363731323404016`*^9, 3.836373180911953*^9}, {3.850360839174744*^9, 
  3.8503608420899367`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"ad81809b-a407-414c-a389-795f0315302a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "moranValuesByStage"}]], "Input",
 CellChangeTimes->{{3.875246348164426*^9, 3.8752463535019617`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"1d77dd83-14ba-4a2c-b6a0-96ab8639e543"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"326", ",", "218", ",", "177"}], "}"}]], "Output",
 CellChangeTimes->{3.875246353996397*^9, 3.8752508531755943`*^9, 
  3.879827347282484*^9, 3.8813937895365486`*^9, 3.8813946279219866`*^9, 
  3.885469251421996*^9, 3.8913212920292225`*^9, 3.89132134692715*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"21866c37-5142-458b-b95d-fded0a39af80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Length", "/@", "moranValuesByStage"}], "]"}]], "Input",
 CellChangeTimes->{{3.8752463552664814`*^9, 3.8752463640406313`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"fb741448-d0c7-445d-8153-38994511cd65"],

Cell[BoxData["721"], "Output",
 CellChangeTimes->{{3.8752463584884524`*^9, 3.8752463648370266`*^9}, 
   3.875250854002858*^9, 3.8798273472904625`*^9, 3.8813937895724535`*^9, 
   3.881394627951295*^9, 3.8854692526187916`*^9, 3.8913212920372367`*^9, 
   3.8913213469325504`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"e8cfd214-2bf9-46a8-9b55-628eeefbeb10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"\"\<N+-Moran\>\"", "/.", "#"}], ",", 
      "\"\<only one cell type\>\""}], "]"}], "]"}], "&"}], "/@", 
  "moranValuesByStage"}]], "Input",
 CellChangeTimes->{{3.8854692721924486`*^9, 3.885469283470072*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"8eaa4ce3-dbbe-4c4a-94d0-921c4c8d3a63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"51", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.8854692730925436`*^9, 3.885469284227152*^9}, 
   3.8913212920739126`*^9, 3.8913213469650164`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"1bac18eb-dfb0-4c0e-8346-01c157da2848"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"\"\<G6+-Moran\>\"", "/.", "#"}], ",", 
      "\"\<only one cell type\>\""}], "]"}], "]"}], "&"}], "/@", 
  "moranValuesByStage"}]], "Input",
 CellChangeTimes->{{3.885469291394147*^9, 3.8854692920261326`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"3981b95c-42e1-4932-9e87-e259411e5cfc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"64", ",", "19", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.8854692928737283`*^9, 3.8913212920808887`*^9, 
  3.8913213469996653`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"35037683-5a83-4c32-86c4-03375e9a4391"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotMoran", "=", 
  RowBox[{"Row", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Except", "[", "\"\<only one cell type\>\"", "]"}]}], 
           "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"i", "/.", "moranValuesByStage"}], ")"}]}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"ChartLabels", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<early\>\"", ",", "\"\<mid\>\"", ",", "\"\<late\>\""}], "}"}],
            ",", "None"}], "}"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", "14", ",", 
             RowBox[{"FontFamily", "->", "fontOption"}], ",", "Black"}], 
            "]"}]}], "&"}], "@", 
         RowBox[{"StringDelete", "[", 
          RowBox[{"i", ",", "\"\<+-Moran\>\""}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"None", ",", "\"\<Moran's index\>\""}], "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "20"}], "]"}]}], ",", 
        RowBox[{"ChartStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"colour3", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ")"}]}], ",", 
        RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<N+-Moran\>\"", ",", "\"\<G6+-Moran\>\""}], "}"}]}], 
       "}"}]}], "]"}], ",", "\"\<     \>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.850360934911003*^9, 3.8503609550120163`*^9}, {
   3.87524548630221*^9, 3.875245502396402*^9}, 3.8752505972638826`*^9, {
   3.875251043929121*^9, 3.8752510835453405`*^9}, {3.8798254244184155`*^9, 
   3.879825425334046*^9}, {3.879827280831842*^9, 3.879827295192731*^9}, {
   3.879827364134124*^9, 3.879827403385547*^9}, {3.8798276016941175`*^9, 
   3.8798276184532723`*^9}, {3.879827769620229*^9, 3.879827787983902*^9}, {
   3.879827870428274*^9, 3.879827897746859*^9}, {3.879827965443357*^9, 
   3.879828021588787*^9}, {3.8813938107069283`*^9, 3.8813938192022047`*^9}, {
   3.8813938705792685`*^9, 3.881393878321946*^9}, {3.885469319643983*^9, 
   3.885469319863978*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"1c9d9746-03a9-4ab0-87b4-c3644845081f"],

Cell[BoxData[
 TemplateBox[{"     ", "\"     \"", 
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.4756035092865898, -0.2622121511321749}, {3.52439649071341, 
       0.6664551737756714}}]}, {
      CapForm[None], 
      Directive[
       RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
        Directive[
         RGBColor[0.982864, 0.7431472, 0.3262672]], {{
          Directive[
           RGBColor[
           0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{0.7509076238812251, 0.03372132253711201}, {
                  1.2490923761187749`, 0.03372132253711201}, {
                  1.2490923761187749`, -0.07317546583850931}, {
                  0.7509076238812251, -0.07317546583850931}}], {}, {{
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.2020583190394511}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.24637681159420288`}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.2681818181818182}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.2727272727272727}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.23021257349615556`}]}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{1.2490923761187749`, -0.022108843537414966`}, {
                   0.7509076238812251, -0.022108843537414966`}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1., -0.07317546583850931}, {1., -0.22}}, {{1., 
                   0.03372132253711201}, {1., 0.18362573099415205`}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1.1245461880593874`, -0.22}, {
                   0.8754538119406126, -0.22}}, {{1.1245461880593874`, 
                   0.18362573099415205`}, {0.8754538119406126, 
                   0.18362573099415205`}}}]}, {}}]}], 
             "DelayedMouseEffectStyle"], 
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], 
                 "0.2727272727272727`"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                 "0.03372132253711201`"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.022108843537414966`"}]}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.07317546583850931`"}]}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.22`"}]}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 0.2727272727272727}, {
                Style["75%", Bold], 0.03372132253711201}, {
                Style["median", Bold], -0.022108843537414966`}, {
                Style["25%", Bold], -0.07317546583850931}, {
                Style["min", Bold], -0.22}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], "Tooltip"]& ]}, {
          Directive[
           RGBColor[
           0.9058823529411765, 0.6392156862745098, 0.07058823529411765]], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{1.7509076238812251`, 0.05068360002570529}, {
                  2.249092376118775, 0.05068360002570529}, {
                  2.249092376118775, -0.07159909293951411}, {
                  1.7509076238812251`, -0.07159909293951411}}], {}, {{
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.2430340557275542}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.24644194756554305`}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.261105981327588}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.24778911564625847`}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.27003525264394823`}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.267258382642998}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.2775735294117647}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.32026143790849676`}]}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{2.249092376118775, -0.016857730746619635`}, {
                   1.7509076238812251`, -0.016857730746619635`}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{2., -0.07159909293951411}, {
                   2., -0.22000000000000003`}}, {{2., 0.05068360002570529}, {
                   2., 0.17141820443707237`}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{2.124546188059387, -0.22000000000000003`}, {
                   1.8754538119406126`, -0.22000000000000003`}}, {{
                   2.124546188059387, 0.17141820443707237`}, {
                   1.8754538119406126`, 0.17141820443707237`}}}]}, {}}]}], 
             "DelayedMouseEffectStyle"], 
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], 
                 "0.32026143790849676`"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                 "0.05068360002570529`"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.016857730746619635`"}]}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.07159909293951411`"}]}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.22000000000000003`"}]}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 0.32026143790849676`}, {
                Style["75%", Bold], 0.05068360002570529}, {
                Style["median", Bold], -0.016857730746619635`}, {
                Style["25%", Bold], -0.07159909293951411}, {
                Style["min", Bold], -0.22000000000000003`}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], "Tooltip"]& ]}, {
          Directive[
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{2.750907623881225, 0.36726100296334413`}, {
                  3.249092376118775, 0.36726100296334413`}, {
                  3.249092376118775, 0.05873737257187033}, {2.750907623881225,
                   0.05873737257187033}}], {}, {{}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{3.249092376118775, 0.21717338620841597`}, {
                   2.750907623881225, 0.21717338620841597`}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{3., 0.05873737257187033}, {
                   3., -0.16744295459891792`}}, {{3., 0.36726100296334413`}, {
                   3., 0.6242430226434966}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{3.124546188059387, -0.16744295459891792`}, {
                   2.875453811940613, -0.16744295459891792`}}, {{
                   3.124546188059387, 0.6242430226434966}, {2.875453811940613,
                    0.6242430226434966}}}]}, {}}]}], 
             "DelayedMouseEffectStyle"], 
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], 
                 "0.6242430226434966`"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                 "0.36726100296334413`"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], 
                 "0.21717338620841597`"}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                 "0.05873737257187033`"}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.16744295459891792`"}]}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 0.6242430226434966}, {
                Style["75%", Bold], 0.36726100296334413`}, {
                Style["median", Bold], 0.21717338620841597`}, {
                Style["25%", Bold], 0.05873737257187033}, {
                Style["min", Bold], -0.16744295459891792`}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {0.6259983862693477, -0.2622121511321749}, Frame -> True, 
     FrameLabel -> {{
        FormBox["\"Moran's index\"", TraditionalForm], None}, {None, None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 20], FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         0.7509076238812251, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
         3.249092376118775, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         0.7509076238812251, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
         3.249092376118775, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 300, PlotLabel -> FormBox[
       StyleBox["\"N\"", 14, FontFamily -> "Arial", 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {-0.7, 0.7}, PlotRangePadding -> {{
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{1., 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        0.7509076238812251, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
        3.249092376118775, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
       Automatic}}], 
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.4756035092865898, -0.3371695961299724}, {3.52439649071341, 
       0.7121404660978405}}]}, {
      CapForm[None], 
      Directive[
       RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
        Directive[
         RGBColor[0.982864, 0.7431472, 0.3262672]], {{
          Directive[
           RGBColor[
           0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{0.7509076238812251, 0.00847457627118644}, {
                  1.2490923761187749`, 0.00847457627118644}, {
                  1.2490923761187749`, -0.08717948717948719}, {
                  0.7509076238812251, -0.08717948717948719}}], {}, {{
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., -0.23076923076923078`}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., -0.2894736842105263}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.15929919137466306`}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.15891132572431957`}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.1642156862745098}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.20646766169154226`}]}, {
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.3333333333333333}]}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{1.2490923761187749`, -0.04264411711220222}, {
                   0.7509076238812251, -0.04264411711220222}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1., -0.08717948717948719}, {
                   1., -0.22296211251435133`}}, {{1., 0.00847457627118644}, {
                   1., 0.1489686783804431}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1.1245461880593874`, -0.22296211251435133`}, {
                   0.8754538119406126, -0.22296211251435133`}}, {{
                   1.1245461880593874`, 0.1489686783804431}, {
                   0.8754538119406126, 0.1489686783804431}}}]}, {}}]}], 
             "DelayedMouseEffectStyle"], 
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], 
                 "0.3333333333333333`"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                 "0.00847457627118644`"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.04264411711220222`"}]}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.08717948717948719`"}]}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.2894736842105263`"}]}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 0.3333333333333333}, {
                Style["75%", Bold], 0.00847457627118644}, {
                Style["median", Bold], -0.04264411711220222}, {
                Style["25%", Bold], -0.08717948717948719}, {
                Style["min", Bold], -0.2894736842105263}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], "Tooltip"]& ]}, {
          Directive[
           RGBColor[
           0.9058823529411765, 0.6392156862745098, 0.07058823529411765]], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{1.7509076238812251`, 0.04334943639291465}, {
                  2.249092376118775, 0.04334943639291465}, {
                  2.249092376118775, -0.08123588829471183}, {
                  1.7509076238812251`, -0.08123588829471183}}], {}, {{
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 0.2345679012345679}]}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{2.249092376118775, -0.03295855379188712}, {
                   1.7509076238812251`, -0.03295855379188712}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{2., -0.08123588829471183}, {
                   2., -0.23076923076923078`}}, {{2., 0.04334943639291465}, {
                   2., 0.21071910545594755`}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{2.124546188059387, -0.23076923076923078`}, {
                   1.8754538119406126`, -0.23076923076923078`}}, {{
                   2.124546188059387, 0.21071910545594755`}, {
                   1.8754538119406126`, 0.21071910545594755`}}}]}, {}}]}], 
             "DelayedMouseEffectStyle"], 
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], 
                 "0.2345679012345679`"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                 "0.04334943639291465`"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.03295855379188712`"}]}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.08123588829471183`"}]}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.23076923076923078`"}]}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 0.2345679012345679}, {
                Style["75%", Bold], 0.04334943639291465}, {
                Style["median", Bold], -0.03295855379188712}, {
                Style["25%", Bold], -0.08123588829471183}, {
                Style["min", Bold], -0.23076923076923078`}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], "Tooltip"]& ]}, {
          Directive[
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{2.750907623881225, 0.42389655778389856`}, {
                  3.249092376118775, 0.42389655778389856`}, {
                  3.249092376118775, 0.08729482472846772}, {2.750907623881225,
                   0.08729482472846772}}], {}, {{}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{3.249092376118775, 0.2711779448621554}, {
                   2.750907623881225, 0.2711779448621554}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{3., 0.08729482472846772}, {
                   3., -0.13074541557513694`}}, {{3., 0.42389655778389856`}, {
                   3., 0.6644445541783945}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{3.124546188059387, -0.13074541557513694`}, {
                   2.875453811940613, -0.13074541557513694`}}, {{
                   3.124546188059387, 0.6644445541783945}, {2.875453811940613,
                    0.6644445541783945}}}]}, {}}]}], 
             "DelayedMouseEffectStyle"], 
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], 
                 "0.6644445541783945`"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                 "0.42389655778389856`"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], 
                 "0.2711779448621554`"}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                 "0.08729482472846772`"}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], 
                 RowBox[{"-", "0.13074541557513694`"}]}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 0.6644445541783945}, {
                Style["75%", Bold], 0.42389655778389856`}, {
                Style["median", Bold], 0.2711779448621554}, {
                Style["25%", Bold], 0.08729482472846772}, {
                Style["min", Bold], -0.13074541557513694`}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {0.6259983862693477, -0.3371695961299724}, Frame -> True, 
     FrameLabel -> {{
        FormBox["\"Moran's index\"", TraditionalForm], None}, {None, None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 20], FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         0.7509076238812251, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
         3.249092376118775, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         0.7509076238812251, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
         3.249092376118775, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 300, PlotLabel -> FormBox[
       StyleBox["\"G6\"", 14, FontFamily -> "Arial", 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {-0.7, 0.7}, PlotRangePadding -> {{
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{1., 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        0.7509076238812251, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
        3.249092376118775, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
       Automatic}}]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{{3.8752454890031376`*^9, 3.8752455035688634`*^9}, 
   3.875250600467845*^9, 3.8752508687988014`*^9, {3.875251077383049*^9, 
   3.875251084166405*^9}, 3.875251160702175*^9, 3.879827348236408*^9, {
   3.8798276040342655`*^9, 3.8798276190768976`*^9}, {3.8798279577960835`*^9, 
   3.879828024504644*^9}, 3.881393791703824*^9, {3.881393845591064*^9, 
   3.881393879158747*^9}, 3.881394629212061*^9, 3.8854691703363075`*^9, 
   3.885469320860096*^9, 3.8913212921484623`*^9, 3.891321347137496*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"7f79e73f-f77d-4ec4-8722-29e6aa74becb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Figures\>\"", ",", 
      "\"\<moran_Data.png\>\""}], "}"}], "]"}], ",", "plotMoran"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879827748771061*^9, 3.8798277499407425`*^9}, {
  3.879828031664709*^9, 3.8798280701092167`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"542b4937-93c7-4a79-b5e6-c8f220b69d51"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<ResultsAll\>\"", 
      ",", "\"\<moranValuesByStage.mx\>\""}], "}"}], "]"}], ",", 
   "moranValuesByStage"}], "]"}]], "Input",
 CellChangeTimes->{{3.8813949462663593`*^9, 3.881394975064063*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"99b67072-d8c7-4555-8eb9-67071860e702"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1428., 741.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"964f4db8-f673-45ef-a954-bcd48c47ac29"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 98, "Title",ExpressionUUID->"03d4c82b-5a52-49e0-be8f-ee967b1f3de9"],
Cell[811, 28, 314, 7, 85, "Subtitle",ExpressionUUID->"d27da8c6-3813-4578-b090-12e8d3058d87"],
Cell[CellGroupData[{
Cell[1150, 39, 161, 3, 75, "Section",ExpressionUUID->"a8912e85-eaae-40f2-a5d1-df633ef15ec4"],
Cell[1314, 44, 869, 18, 44, "Input",ExpressionUUID->"607528b3-9193-4c33-843c-30943ed03b53",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2208, 66, 853, 17, 44, "Input",ExpressionUUID->"f286d0e4-030e-40e2-b59e-aacdd87f6577",
 InitializationCell->True],
Cell[3064, 85, 555, 12, 28, "Message",ExpressionUUID->"2b607c0c-47b0-433f-8962-7376b2e6ef16"],
Cell[3622, 99, 155, 2, 32, "Output",ExpressionUUID->"db7e2692-f691-472a-a179-045a302199bd"]
}, Open  ]],
Cell[3792, 104, 262, 5, 44, "Input",ExpressionUUID->"97da38ab-0773-459a-b90e-f4acc395b581",
 InitializationCell->True],
Cell[4057, 111, 697, 18, 44, "Input",ExpressionUUID->"f75e4d6d-8390-4067-85e4-946f49bba053",
 InitializationCell->True],
Cell[4757, 131, 6080, 158, 197, "Input",ExpressionUUID->"660d6228-05c2-45ca-b9dc-e9ccff87fe03",
 InitializationCell->True],
Cell[10840, 291, 508, 12, 44, "Input",ExpressionUUID->"afbaf769-e8e2-4a9b-bfd5-a053387f493a",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[11385, 308, 265, 4, 61, "Section",ExpressionUUID->"9f3a931d-8ddb-456b-95d2-875467e9c546"],
Cell[11653, 314, 534, 11, 28, "Input",ExpressionUUID->"e479b02f-8fd9-4f3c-a97c-8e2563878144"],
Cell[12190, 327, 1721, 32, 28, "Input",ExpressionUUID->"8ded0ebb-c5c2-4948-9c9a-0fd088cde8ab"],
Cell[CellGroupData[{
Cell[13936, 363, 265, 4, 28, "Input",ExpressionUUID->"38e679ca-aec8-49fe-978f-380506e83287"],
Cell[14204, 369, 420, 6, 32, "Output",ExpressionUUID->"a5cab57d-a17c-4424-811e-80b33c6eff55"]
}, Open  ]],
Cell[14639, 378, 219, 5, 35, "Text",ExpressionUUID->"c2c9e3dc-706a-45e8-ae9d-e7447430d0be"],
Cell[14861, 385, 364, 9, 28, "Input",ExpressionUUID->"66bc7d85-6d76-40f0-a824-e94981371af1"],
Cell[CellGroupData[{
Cell[15250, 398, 257, 5, 28, "Input",ExpressionUUID->"311452ec-a481-4d49-8d06-b94b488aed14"],
Cell[15510, 405, 509, 8, 32, "Output",ExpressionUUID->"01e81e78-713c-4d57-92da-062ccea4b6d9"]
}, Open  ]],
Cell[16034, 416, 715, 13, 48, "Input",ExpressionUUID->"3d17469b-6e0d-47a2-a90f-75bda061c604"],
Cell[CellGroupData[{
Cell[16774, 433, 290, 6, 28, "Input",ExpressionUUID->"f22064ac-f747-4ee0-9c2e-ed21aa3eb761"],
Cell[17067, 441, 2185, 36, 109, "Output",ExpressionUUID->"008ec890-56a7-48a4-a3a3-8d97efb2a589"]
}, Open  ]],
Cell[19267, 480, 417, 8, 28, "Input",ExpressionUUID->"51428dcf-977e-4111-9d80-049057def257"],
Cell[19687, 490, 694, 16, 28, "Input",ExpressionUUID->"69c917f2-a8d0-4b05-b3e2-3cc5ca58474c"],
Cell[20384, 508, 181, 3, 35, "Text",ExpressionUUID->"41f5126f-c804-4674-a893-81dab6fbe74b"],
Cell[CellGroupData[{
Cell[20590, 515, 64539, 1063, 210, "Input",ExpressionUUID->"6243039c-5f5a-4c09-99b3-8770aacae8bb"],
Cell[85132, 1580, 64652, 1064, 214, "Output",ExpressionUUID->"55bfe487-9506-4c83-9ae5-93bbf5e14b09"]
}, Open  ]],
Cell[149799, 2647, 373, 8, 35, "Text",ExpressionUUID->"5d42194d-b346-49c6-a198-54742e1c7975"],
Cell[150175, 2657, 4452, 105, 143, "Input",ExpressionUUID->"efadbacb-3f34-4e43-acc4-dcc2b5e27e94"],
Cell[154630, 2764, 183, 3, 35, "Text",ExpressionUUID->"3a4f032b-3b50-4a6c-8bf3-d1a78e1d3015"],
Cell[CellGroupData[{
Cell[154838, 2771, 343, 7, 28, "Input",ExpressionUUID->"b68dad6c-45b7-4821-8dec-055164ba1bf8"],
Cell[155184, 2780, 349, 5, 32, "Output",ExpressionUUID->"8c2a90ba-80fa-486b-8c56-7a54be230f3e"]
}, Open  ]],
Cell[155548, 2788, 181, 3, 35, "Text",ExpressionUUID->"754db852-d452-4a42-b1e4-fb61a1888351"],
Cell[CellGroupData[{
Cell[155754, 2795, 397, 8, 28, "Input",ExpressionUUID->"7477789a-0603-4165-942c-171d6932c2d3"],
Cell[156154, 2805, 349, 5, 32, "Output",ExpressionUUID->"7b3577e0-132d-4fc4-806b-9038944af640"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156540, 2815, 379, 8, 28, "Input",ExpressionUUID->"4aebb22f-2b63-4028-b7ad-667409ea20e5"],
Cell[156922, 2825, 297, 4, 32, "Output",ExpressionUUID->"15261490-f229-4aa9-abd2-1da958ecb6cc"]
}, Open  ]],
Cell[157234, 2832, 735, 20, 28, "Input",ExpressionUUID->"ad81809b-a407-414c-a389-795f0315302a"],
Cell[CellGroupData[{
Cell[157994, 2856, 219, 3, 28, "Input",ExpressionUUID->"1d77dd83-14ba-4a2c-b6a0-96ab8639e543"],
Cell[158216, 2861, 377, 6, 32, "Output",ExpressionUUID->"21866c37-5142-458b-b95d-fded0a39af80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158630, 2872, 253, 4, 28, "Input",ExpressionUUID->"fb741448-d0c7-445d-8153-38994511cd65"],
Cell[158886, 2878, 355, 5, 32, "Output",ExpressionUUID->"e8cfd214-2bf9-46a8-9b55-628eeefbeb10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159278, 2888, 404, 10, 28, "Input",ExpressionUUID->"8eaa4ce3-dbbe-4c4a-94d0-921c4c8d3a63"],
Cell[159685, 2900, 283, 5, 32, "Output",ExpressionUUID->"1bac18eb-dfb0-4c0e-8346-01c157da2848"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160005, 2910, 405, 10, 28, "Input",ExpressionUUID->"3981b95c-42e1-4932-9e87-e259411e5cfc"],
Cell[160413, 2922, 259, 5, 32, "Output",ExpressionUUID->"35037683-5a83-4c32-86c4-03375e9a4391"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160709, 2932, 2905, 67, 86, "Input",ExpressionUUID->"1c9d9746-03a9-4ab0-87b4-c3644845081f"],
Cell[163617, 3001, 37840, 839, 181, "Output",ExpressionUUID->"7f79e73f-f77d-4ec4-8722-29e6aa74becb"]
}, Open  ]],
Cell[201472, 3843, 477, 11, 28, "Input",ExpressionUUID->"542b4937-93c7-4a79-b5e6-c8f220b69d51"],
Cell[201952, 3856, 446, 10, 28, "Input",ExpressionUUID->"99b67072-d8c7-4555-8eb9-67071860e702"]
}, Closed]]
}, Open  ]]
}
]
*)

